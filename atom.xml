<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.laffitto.xyz</id>
    <title>乱谈府      ——詹詹碎言</title>
    <updated>2025-03-03T15:28:25.172Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.laffitto.xyz"/>
    <link rel="self" href="https://blog.laffitto.xyz/atom.xml"/>
    <subtitle>Aspire to inspire until I expire 🎸
也扯淡，也思考，也生活</subtitle>
    <logo>https://blog.laffitto.xyz/images/avatar.png</logo>
    <icon>https://blog.laffitto.xyz/favicon.ico</icon>
    <rights>All rights reserved 2025, 乱谈府      ——詹詹碎言</rights>
    <entry>
        <title type="html"><![CDATA[「不止金钱」笔记]]></title>
        <id>https://blog.laffitto.xyz/post/beyond-money-note/</id>
        <link href="https://blog.laffitto.xyz/post/beyond-money-note/">
        </link>
        <updated>2025-03-02T15:24:48.000Z</updated>
        <summary type="html"><![CDATA[<p>不止金钱 的笔记</p>
]]></summary>
        <content type="html"><![CDATA[<p>不止金钱 的笔记</p>
<!-- more -->
<p>不止金钱是生动活泼推出的一款<a href="https://www.xiaoyuzhoufm.com/podcast/65a625966d045a7f5e0b5640">播客栏目</a>，前些日子<a href="https://sspai.com/series/378/list">文字版</a> 上线少数派，作为老观众支持了一波。最近一段时间抽空看完了。栏目分为正篇和番外部分，正篇内容主要分为两块结构：</p>
<ul>
<li>阐述投资思想：这里会分章节介绍投资中的概念与观念，包含从机构到散户的一些举动。</li>
<li>延伸到生活中：将章节的具体投资思想应用到实际生活中，做到举一反三。<br>
这些观念我基本看过大部分，有点面向小白，不过读下来还是有所收获。毕竟阅读东西也不能希望全书都能带给你新理解，但有一些新的认知就是难得可贵的。</li>
</ul>
<p>为了方便阅读，我把文字版自制成了电子书，有兴趣的可以读一读。链接如下：<a href="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/blog/2025-03-02-ovfeqq.epub">不止金钱20250302.epub</a><br>
📢 <strong>免责声明</strong> 📢<br>
本电子书仅供学习交流使用，严禁用于商业用途或长期保存。请在<strong>24小时内自行删除</strong>，如果您喜欢本书，请<strong>购买正版</strong>以支持作者和出版商！如因下载或使用本文件产生任何后果，均由使用者自行承担，本人不对其负任何责任。</p>
<p>以下为一些自己感悟的画线内容收集与思考：</p>
<h2 id="正篇">正篇</h2>
<h3 id="情绪控制">情绪控制</h3>
<blockquote>
<p>一个投资决策等于专业的认知和良好的情绪，并且排除风险。<br>
投资应该是情绪和认知的变现。</p>
</blockquote>
<blockquote>
<p>回到普通人的投资上，就一个建议：做投资的时候，我们要时刻标注自己的情绪。<br>
但不幸的是，在投资中，压力是长期存在的。就像我陷入中度焦虑症时，每一天、每一刻，压力都不曾消失。在所有的投资落袋为安之前，都充满了不确定性。</p>
</blockquote>
<blockquote>
<p>无论面对什么样的不确定性，<strong>我们都可以做一下拆分，看一下哪些元素不在我们的掌控范围之内，又有哪些是我们可以掌控的</strong>。这就像看待投资一样，乍一看全是运气，但仔细一想，又有可以应对的着力点。即使是七分天注定，三分靠努力，我们也要找出这三分来。有了这样的思路，我们就能降低一些茫然无措的状态，找到生活中的小确幸。</p>
</blockquote>
<p>以上几点都是关于情绪的说明。恐慌与贪婪，究竟是随波逐流还是逆向前行都来自于投资理念和认知。大环境的情绪对个人的影响是至关重要的，当你看到 app 中普天盖地的新闻，如何理性看待他们。说着容易，意识到容易，但做起来难。</p>
<blockquote>
<p>用颜色标记情绪的工具有扎实的理论基础，是由耶鲁大学教授马克·布莱克特 (Marc Brackett) 和波士顿一位教授罗素 (James Russell) 共同开发的。<br>
这个坐标图里，人的情绪分为两个维度，分别是「能量」和「愉悦」。横轴代表「愉悦」，从「极度不愉悦」到「极度愉悦」，简单来说也就是从很不开心到很开心。纵轴代表「能量」，代表你精神够不够，有没有活力。同样也是从极低到极高。</p>
</blockquote>
<figure data-type="image" tabindex="1"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250301180257094.png" alt="image.png" loading="lazy"></figure>
<p>在原点附近的情绪，<strong>其实是比较适合投资的稳定情绪状态</strong>。情绪不在原点附近，我们宁愿不做。这里就在控制自己的情绪，保持心态平稳在合适的范围去判断，才能减少头脑一热的事情发生。</p>
<blockquote>
<p>一位朋友和我讲过自己在日常生活中进行情绪觉察的案例。有一天她突然意识到自己和伴侣吵架的时间，大部分都发生在睡觉前。她觉得可能是和能量值有关，因为睡前又累又困，能量值非常低，并不适合进行沟通，沟通中的一点点小摩擦就会让情绪失控。<br>
所以她后来和伴侣商量了一个方法，就是晚上睡觉前禁止讨论正事，只有在吃饱喝足之后，也就是情绪相对良好的时候，才沟通严肃的事。不仅如此，他们还定了一个暗号，用来告诉对方：「我的能量值很低了」。这样对方就会明白自己并不是故意闹别扭，也不是真的生气，只是此时此刻情绪不在原点的中心范围内，可以先放下争论。所以，有意识地觉察情绪，对我们自己、我们的家人和周围的朋友而言，都很有帮助，可以避免很多不必要的误会。</p>
</blockquote>
<p>非常好的应用在日常中的情绪管理技巧。</p>
<h3 id="认知增加">认知增加</h3>
<blockquote>
<p>「有效认知」= 证据+逻辑。否则可能只是一个观点、感觉，或是一种猜测。<br>
第一个方法是：对我们听到的、媒体上看到的信息，督促自己区分事实和观点。只有事实、证据和数据才能组成「有效认知」，观点并没有那么重要。<br>
第二个方法是：持续多问几个「为什么」，直到问出证据来。</p>
</blockquote>
<p>面对各种新闻时可以采取的行动。往往多问问，多想几步，很多情绪化的煽动内容就不攻自破了。</p>
<blockquote>
<p>普通人不可能像机构一样砸钱，但是可以用客观、可靠、多元这三个要素去过滤信息。<br>
<strong>尽量找一手信息</strong>。在没有一手信息的情况下，尽可能只参考严肃的信息源。<br>
如果想投资一个具体的行业，也有一些比较方便的获取途径，这些研究不再是专业机构的特供产品。一个比较简单易得的方法是，注册一个第三方研究报告系统，这些研究报告名义上不针对个人投资者，只提供给机构，但我们可以以公司做研究的名义去开通相关账号。</p>
</blockquote>
<p>普通人面对信息噪音的一些经验。</p>
<blockquote>
<p>一切投资研究都必须指向结论，而不是堆噪音。<br>
所以前辈给我的建议就是「三七开」：70% 的精力放到微观上，把一个具体的公司研究清楚，剩下 30% 的时间跟踪宏观即可。<br>
我们要用少量时间关注宏观变化。即使关注，也只关注事实和数字。这样下来，30% 的时间绰绰有余，同时情绪也留在了舒适区。我知道大家喜欢看、喜欢讨论宏观的内容，但把它们当作故事来听就足够了，最好不要作为决策依据。<br>
芒格说过的一句话，很值得我们琢磨。他说：宏观是我们必须接受的，微观才是我们可以有所作为的。</p>
</blockquote>
<p>大量的信息没用，不断的筛掉噪音，有最终的结论才重要。每天打开各种新闻或者交易 app 都有各种普天盖地的新闻。不要将重点放在宏观叙事，问问和自己有啥关系。真正有讲的那么好还能感受不到？多关注可以参与决策的东西。</p>
<h3 id="止损">止损</h3>
<blockquote>
<p>无论如何，一定要在自己的心理账本中设置一条止损线。<br>
机构通常达到 30% 的损失后才会强制止损。但对于个人来讲，我观察到的现象是，亏损达到 30% 后，你就会灰心丧气，直接躺平了，这也符合正常人的情绪。因此，控制风险就是要尽量缩小心理账本。<br>
把止损控制在更小的范围内，比如 10% 或 15%。我在量化投资策略里见过更严格的：只要下跌到了成本线，即使还没有产生亏损，也照样把投资标的清仓。当然，这只是个参考，我们肯定不会这么严格。不过尽量缩小心理账本之后，负面情绪和心理负担会降低很多。</p>
</blockquote>
<p>止损非常重要，因为投资简单来说就是何时买卖。一旦亏损热情会消耗，躺平会将这件事无限延期和自我麻痹。</p>
<blockquote>
<p>分享一个概念叫做「情绪止损」，因为情绪也是资源，用光了就没了。<br>
我从前对自己非常苛刻，一旦犯错就反复责问自己。事情过去没过去不重要，关键是要自责、要反思。这也和我们之前提到的教育经历有关，「吾日三省吾身」不够，恨不得「三十省吾身」，觉得自己不该这么做，进入持续的内耗和负反馈。后来，我把止损的想法用到自己的情绪上，只要自责超过一天，我就会提醒自己：情绪消耗已经到 -10% 了，这就是止损线，就此打住。因为情绪是有限的，剩下的能量要用到下一件事情上。<br>
当然，说起来好像特别简单，实际做起来，<strong>需要持续不断给自己心理暗示，才能养成习惯。</strong></p>
</blockquote>
<p>生活中情绪的及时止损，很有用，停止自我内耗。</p>
<h3 id="分散和对冲">分散和对冲</h3>
<blockquote>
<p>相关性是一个非常重要的因素。<br>
什么情况下相关性比较低呢？比如，一部分投资在科技行业，另一部分投资到奢侈品行业。科技行业不景气的时候，芯片股票也会跌，但并不影响奢侈品行业，要买包、买珠宝黄金的人还会继续买。专业机构会用严谨的统计学方法来计算相关性，然后再做配置。</p>
</blockquote>
<p>寻找相关性低的资产降低风险。</p>
<blockquote>
<p>这种市场整体都在波动的情况下，一种常见的应对策略就是「对冲」。<br>
实话实说，没有人能预测会发生什么。但是基于宏观风险的对冲，在投资中持有一部分黄金是没毛病的，这一定是不二选择。<br>
我们用巴菲特来举例，他 2023 年买了很多日本的股票，但同时做空了日元，这样就可以防范日元贬值的风险，这就是一个典型的不同资产的对冲策略。<br>
找相反的东西是控制风险的很好手段。</p>
</blockquote>
<p>对冲策略之前确实没有考虑过。我甚至在近期才知道期权包括做空这种概念，感到十分震惊，仿佛打开了新世界的大门。</p>
<blockquote>
<p>保险本身就是一种对冲。<br>
但很多人有一个误区，就是把保险当作理财来买，所谓的「理财险」也被推销得很厉害。这是一种有偏差的想法，因为保险是对冲工具，不是奔着理财去的。<br>
如果是为了对冲生活中的意外，那我们就奔着合格的保险去。如果是为了收益，那我们就奔着更专业的投资机构去。<br>
对冲的底层逻辑就是要考虑小概率事件，有没有方法能减少相应的损失。如果我们把生活看成一个投资组合——就像我们说「生活处处是投资」，理念也是类似的。</p>
</blockquote>
<p>生活中的对冲方式：保险。不过要注意需求，真想对冲要选择合适的保险。</p>
<h3 id="止盈">止盈</h3>
<blockquote>
<p>我们的确可以像投资机构一样，给自己画一道线。这条线怎么画？我们需要有一个参照物，这个参照物就是我们之前讨论过的「长期复合收益率」，它会让我们的参考更加客观。我们之前聊「投资预期和长期主义」的时候讨论过，如果拉长到十年的周期，不同的投资标的，会对应有不同的投资回报率。<br>
当市场极度火热时，我们应该做什么呢？其实是应该止盈，而不是在市场最疯狂的时候依旧继续买入。</p>
</blockquote>
<p>与止损对应，指定合适的止盈目标也是同样重要的选择。合理退出，保证胜率，如何不能够战胜情绪，就设定强制止盈线。</p>
<h3 id="减少路径依赖">减少路径依赖</h3>
<blockquote>
<p>「路径依赖」是投资中隐藏最深的坑。它不像风险、亏损，能一眼看出。<br>
但是当外界环境发生变化时，各种外部信息、证据都变了，我们原本的「舒适能力圈」可能会阶段性失效，如果我们不及时更新，就会变成那个固执己见的人。</p>
</blockquote>
<p>保持终身学习的能力，对新事物保持好奇心并去接触。不要抵触改变。</p>
<blockquote>
<p>普通人如何做到：<br>
一个方法是从投资机构的做法里总结出来的，就是刻意找反对意见。我们去找的不是简单的对立观点，而是对立观点背后的证据和逻辑。如果奔着证据去，阅读效率会非常高，一旦发现是在兜售观点而不是证据时，我们都可以直接略过。</p>
</blockquote>
<p>找寻事实而非观点。</p>
<h2 id="番外">番外</h2>
<h3 id="个人养老金">个人养老金</h3>
<blockquote>
<p>养老金账户必须投到指定的产品范围内，而这些指定的产品大多数都是风险比较低的理财和基金，但低风险不等于零风险，一样有亏损的可能。</p>
</blockquote>
<p>个人养老金的性质</p>
<h3 id="保险">保险</h3>
<blockquote>
<p>保险分为两个主要类别，一类是保障型保险，另一类是理财型保险。<br>
保障型的保险是指，一旦发生意外，我们能够获得相应的理赔，这是最典型、最传统，也是我们最常接触到的保险。比如常见的疾病类保险，就是可以通过保险理赔去医院看病的花销。<br>
另外一种理财型保险，顾名思义，同时兼顾一部分保障功能和理财功能。比如曾经很热门的「万能险」就是其中一种，在发生人身意外时，这种保险会在一定条件下给予理赔，同时投入的保费也可以用来赚利息。就像投资理财一样，最终本金和利息都会返还给我们。听起来似乎是一个两全其美的事情，也吸引了不少人投资，但是其中踩坑的人也不在少数，包括我自己的家人。<br>
保险的作用毕竟是保障，其次才是理财。</p>
</blockquote>
<p>同上面，保险的分类，需要明确需求与性质。</p>
<blockquote>
<p>当我们去看一款理财保险产品的时候，真正需要关心的是它给我们保证的最低收益是多少，至于预期收益一定不能太当真。<br>
理财保险的本质，就是超长期的储蓄，用于做低风险的投资。<br>
保险的本质，就是保障我们免受意外风险的冲击。所以当我们考虑保险产品的时候，优先考虑那些保障我们免于疾病或者人身意外伤害的保险，而不是首先追逐那些带有比较高收益目标的理财保险。</p>
</blockquote>
<p>理财型保险需要谨慎，更像是陷阱。</p>
<h3 id="黄金投资">黄金投资</h3>
<blockquote>
<p>黄金价格的变化周期非常长，远比股票市场的股价周期要长</p>
</blockquote>
<p>这两年金价的上涨或只是特殊形势下的上升趋势。</p>
<h3 id="债券基金">债券基金</h3>
<blockquote>
<p>债券基金都有封闭期的差异。有的债基是买了一段时间之后才能够赎回，比如它的封闭期可能是一个月、3 个月或 6 个月。<br>
债基底层的资产略有差异。意思就是每支债券基金投资的债券种类不一样。这个数据在哪儿能看到呢？一般在销售这些基金的软件里面都会有「基金持仓」这个栏目，在这里能看到细项。<br>
除了底层资产和封闭期的差异之外，还有一类债券基金，大家一定要非常注意。它其实更像是股票基金，在它的名字里一般都会出现「可转债」三个字。「可转债」就是「可转换债券」的简称。它是一种特殊的债券，在一定的条件下，这些债券可以转化成发行方的股票。这样说你就懂了，它是可以变成股票的，所以它的收益比普通的债券确实高一些，但相应风险也同样会被股票的风险所传导。</p>
</blockquote>
<p>债基和可转债的相关概念。</p>
<blockquote>
<p>债券的期限越长，价格波动的弹性越大。所以在上涨的时候， 30 年期的国债就会比 5 年期的表现更好。反过来下跌的时候也是这样。<br>
国债的投资风险主要还是利率变化的风险。有一个简单的公式，大家只要知晓就可以了。利率下降，国债价格上涨；反之，它就会下跌。所以，哪怕是国家发行的债券在二级市场交易的时候，也会有价格波动。</p>
</blockquote>
<p>国债波动的逻辑。</p>
<h3 id="量化">量化</h3>
<blockquote>
<p>量化是在找大样本下面的统计学规律，主观投资是在找小样本下确定性比较高的大机会规律。<br>
因子失效，一种就是刚才说的其实是你挖得不对，这个因子在历史上，也就是某一些时间段或某些市场环境下起效，但未来比如说 6 个月市场环境变了，它就没有那么有效。第二种就是各家可能挖掘到类似的规律，都在用这个因子，这个因子的有效性会逐步变低，最后这个因子就变得不挣钱了。<strong>做量化其实是一件蛮苦的事，永远都要挖一些新的规律，永无止境。</strong><br>
<strong>量化最大的风险就是历史规律不再有效了。</strong><br>
我们最终还是要了解净值曲线背后的风险和收益来源，要心中有数，不能盲目只看净值曲线，否则就有可能掉进隐含的风险里了。</p>
</blockquote>
<p>大型量化机构会去从市场和论文中寻找合适的因子进行量化，但因子是有时效性的。虽然自己还没深入研究，但看很多人的经验叙述，A 股中很多逻辑貌似都行不通。</p>
<p>以上为一些简短的画线，回过头看很多内容还是很精彩的。可以在不同的时段多读几遍，有些东西你以为知道，但其实并不如此。以为烂熟于胸不会踩坑，但实际踩了坑也不一定能长记性下次避免。多看多实践，学无止境。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[基于Obsidian记录回顾系统]]></title>
        <id>https://blog.laffitto.xyz/post/DailyNoteReview/</id>
        <link href="https://blog.laffitto.xyz/post/DailyNoteReview/">
        </link>
        <updated>2025-02-03T15:21:24.000Z</updated>
        <summary type="html"><![CDATA[<p>基于obsidian的每日记录，每周，每月回顾系统</p>
]]></summary>
        <content type="html"><![CDATA[<p>基于obsidian的每日记录，每周，每月回顾系统</p>
<!-- more -->
<p>自己看过很多方法论的文章，其中记录每一天的生活，发生的事情与所思所感这件事非常有意义。最直接的一方面你可以依据模糊的检索到当时实际的情景，他们可能是一件事情阐述，一段当时心情的记录。<strong>借助定期回顾也会让你有目标性并系统性的进行反思改进，催进后续的目标制定和习惯的养成</strong>。在过去大概一年时间里，我逐渐使用 Obsidian 构建了这套记录回顾系统，收获颇丰，故分享之，希望共同进步。</p>
<h2 id="记录的契机">记录的契机</h2>
<p>为什么是 Obsidian？自己把它作为主力笔记软件也两年有余了。在接连尝试过为知笔记，印象笔记，但因为后续维护和定价带来的失望后，不会再去考虑使用依赖云端环境的笔记软件作为主力，以前里面的内容记录也因为导出后格式等问题基本烂尾了。我承认 Notion 这类 All in one 的软件非常方便，但是五年，十年后谁也无法承诺这些产品还会存在在这个世界上。Obsidian 作为一个纯本地软件，虽然 md 格式无法优雅的实现某些特定功能（如表格，图片嵌入），但胜在可以自主把控文件，配合 Remotely Save 等同步插件，同样可以做到在多端同步的同时完全把控自己的数据。并且单单每日记录加上周回顾这些内容，一年就大概有 420 个左右的文件，纯 md 格式也易于整合管理。</p>
<p>在大概去年 4 月的时候，我偶然刷到一个使用每日笔记 obsidian 记录生活的视频。本身 obsidian 这个软件最开始推出的时候，每日笔记就是作为一个官方模块集成在应用中的。但看了他们的操作思路后，才让我明白了这个模块真正的意义。说实话我对每日记录并不陌生，从很久之前我是使用 journey（一个日记 app）专门做<a href="https://laffitto.xyz/archives/journey">晨间日记</a>。每天早上起来按照一个模板，回顾昨天的事情。但是后续因为 app 模板功能还要订阅，外加记录内容和其他内容有所割裂，频率也逐渐变少了。</p>
<p>由此为契机，在吸取多方的经验和自己生活的魔改之后，我重新基于 obsidian 构建了一套记录系统，并不断改进达到目前的状态。系统依赖于 Calendar，Periodic Notes，Linter，Dataview 和 Templater 插件。在开始熟悉的时候可能需要折腾适应一下，但后面基本上是一劳永逸。记录分为三个大块 DailyNote，WeeklyReview 和 MonthlyReview，以下我逐一介绍，用作抛砖引玉。</p>
<h3 id="dailynote">DailyNote</h3>
<p>顾名思义，该模块记录每天的日常。通过模板创建后，会自动显示今天的日期和昨天明天每日笔记的短链接。笔记的正式内容分为三个部分。<br>
第一部分为 Daily Questions，即每日的自我问答。这里主要是起到每日日记的作用。<strong>我会根据模板记录当日发生的事情，并记录回答自己这些问题。</strong><br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203174633368.png" alt="image.png" loading="lazy"></p>
<p>第二部分为 Notes。这里主要需要是记录下来每天看到的一些有趣内容或项目，它们通常可能会十分短小，单独记录成一篇笔记又会过于零散。但是你可能会在某个时候回想起它们，这里时候借助搜索功能就是快速的调用。例如如下：<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203174838384.png" alt="image.png" loading="lazy"></p>
<p>第三部分为 Files Overview，是基于 obsidian 所有文件的一个筛选。它通过 dataview 自动构建，主要向我展示每天新建的笔记，每天修改的笔记和往年今日的笔记。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203175004546.png" alt="image.png" loading="lazy"></p>
<p>在新一天开始时，点击日历图表的对应日子会自动创建当日日记。首先回顾一下昨晚发生了什么，通常是前一天记录后发生的事情和夜间睡眠的情况，然后正常开始崭新的一天。中途看见了一些有趣的文章或事情，可以摘录在 Notes 部分下面。晚上结束后再把深入思考的东西填充一下。这里可以事无巨细，想写什么写什么。</p>
<h3 id="weeklyreview">WeeklyReview</h3>
<p>该部分为每周的回顾，一般我会当周的周日晚上进行。通过模板创建后会显示上周、本月、下周的短链接。笔记的正式内容同样分为三个部分。<br>
第一部分为周计划。这里为双周为单位制定，<strong>这两周内的关键目标是什么，同时依据这个目标制定合适的任务推进。</strong><br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203175045195.png" alt="image.png" loading="lazy"></p>
<p>第二部分为本周回顾。借助 dataview 会自动将该周的 DailyNote 进行汇总，方便我们回顾一周的内容和反思。并回答下面的问题。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203175114114.png" alt="image.png" loading="lazy"></p>
<p>第三部分为本周笔记。同样使用 dataview自动构建汇总，以周为单位展示该周新建和修改的笔记。</p>
<p>在新一周的开始时, 点击日历图标的对应周数会根据模板自动创建。在回顾当周发生的事情同时，总结一下该周的情况，并制定下周的目标。</p>
<h3 id="monthlyreview">MonthlyReview</h3>
<p>该部分为每月的回顾总览，在当月特定的时间点创建都可以。通过模板创建后会显示上月和下月的短链接。目前每月回顾较简单，包含两个部分。<br>
第一部分为月计划。这里以双月为单位制定，<strong>这两个月的关键目标是什么</strong>。这里制定的计划要为后续的周计划和每日任务搭建好基础。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203175207659.png" alt="image.png" loading="lazy"></p>
<p>第二部分为本月回顾。仅汇总了每周周回顾，当月的新建和修改的笔记。由于每周会进行回顾，故没有进行每月的问题提问。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203175241508.png" alt="image.png" loading="lazy"></p>
<p>在新月份开始时，点击日历图标对应月份会总动创建笔记。更多时时候时给一个目标导向和查询的作用。不太经常在此记录。</p>
<p>有些人可能会疑问，记录和回顾目标设定都会涉及任务处理，但在这里没有体现。我只能说确实是的，虽然 obsidian 可以完成这件事情，但是依赖其他插件会显得过于复杂了，我是另外一个软件滴答清单去实现任务的制定。正所谓术业有专攻，后面会再出文章展示滴答清单的系统，两个部分合二为一才是我目前完整的记录回顾系统。</p>
<h2 id="模板配置展示">模板配置展示</h2>
<p>如果你喜欢我的系统，有所启发且想自己尝试，这里我会把上述内容用到的插件配置和三个模板文件在这里分享给大家。</p>
<h3 id="templater">Templater</h3>
<p><a href="obsidian://show-plugin?id=templater-obsidian">Templater</a> 插件用于直接调用模板创建笔记。安装后需要注意设置 <code>Template folder location</code> 为模板文件夹的位置，另外把 <code>Trigger Templater on new file creation</code> 选项打开。</p>
<h3 id="dataview">Dataview</h3>
<p><a href="obsidian://show-plugin?id=dataview">Dataview</a> 插件主要是可以方便以类型表格的形式展示数据，安装后即可，无需特别调整。</p>
<h3 id="linter">Linter</h3>
<p><a href="obsidian://show-plugin?id=obsidian-linter">Linter</a> 插件主要可以对文章进行一些格式化的操作。其功能很强大，我们主要是用来规范特定的字段设定文章的创建和修改时间，防止在各种设备同步后因为时间不统一导致的显示不一致问题。<br>
主要设置如下：将日期相关设置确定下来，创建日期键名和修改日期键名要注意，不然后期使用 dataview 判断时间段会出错。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203172910247.png" alt="image.png" loading="lazy"></p>
<h3 id="calendar">Calendar</h3>
<p>Calendar 插件已经很久没更新了，但是我也没找到其他趁手合适的替代品，这里建议去 github 上下载它的 <a href="https://github.com/liamcain/obsidian-calendar-plugin/releases/tag/2.0.0-beta.2">2.0.0beta</a> 版本，需要手动进行安装。其他设置无需改动。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203220732844.png" alt="image.png" loading="lazy"></p>
<h3 id="periodic-notes">Periodic Notes</h3>
<p><a href="obsidian://show-plugin?id=periodic-notes">Periodic Notes</a> 插件用于基于设定模板的格式直接创建每日，每周，每月笔记。<br>
我的 Dailynote 设置如下。Format 为 YYYY/MM-MMMM/YYYY-MM-DD-dddd<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203173209689.png" alt="image.png" loading="lazy"><br>
这样每次新建笔记位于 0-Daily_Note 文件夹下, 后续以年/月份/具体日期命名。</p>
<p>WeeklyNote 设置如下：<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203173430427.png" alt="image.png" loading="lazy"></p>
<p>MonthlyNote 设置如下：<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203173532796.png" alt="image.png" loading="lazy"></p>
<p>每周笔记以年份/Periodic/W 周数命名，每月笔记以年份/Periodic/M 月份命名。</p>
<p>如下为文件格式展示<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/20250203174500017.png" alt="image.png" loading="lazy"></p>
<h2 id="模板文件">模板文件</h2>
<p>在选定的模板文件下下新增模板，设定模板文件时候需要打开 md 文件为源码模式，注意各种缩进。中途一些时间模板和 dataview 的语句修改可以直接询问 AI，做出合适自己模板。</p>
<h3 id="dailynote-2">DailyNote</h3>
<pre><code class="language-text">---
createDate: 2025-02-03 23:15
modifyDate: 2025-02-03 23:15
tags:
  - DailyNote
---

# Invalid date

&lt;&lt; [[0-Daily_Note/2025/02-二月/2025-02-02-星期日|Yesterday]] | [[0-Daily_Note/2025/02-二月/2025-02-04-星期二|Tomorrow]] &gt;&gt;

---
## 📅 Daily Questions
### 🌜 昨晚发生了什么
- 

### 🙌 深入思考
#### 今日回顾
&gt; 今天发生了什么？完成了什么？值得感激的事情是什么？
- 

####  面对挑战 
&gt; 今天我遇到的挑战是什么？我是如何应对的？
- 

#### 情绪反思 
&gt; 今天我经历的主要情绪是什么？这些情绪背后的原因是什么？
- 

#### 人际互动
&gt; 今天的人际互动中，有哪些是积极的？有哪些是我希望改进的？
- 

---
## 📝 Notes
- &lt;% tp.file.cursor() %&gt;





---

## Files Overview

&gt; [!example]+ 今日创建
&gt; ```dataview
&gt; table without id
&gt; file.link as Note,
&gt; file.folder as Folder,
&gt; createDate as &quot;Created&quot;
&gt; FROM &quot;&quot;
&gt; where 
&gt; 	date(split(createDate,&quot; &quot;)[0]) = date(&quot;2025-02-03&quot;) 
&gt; 	AND file.path != this.file.path
&gt; sort createDate desc
&gt; ```

&gt; [!example]+ 今日修改
&gt; ```dataview
&gt; table without id
&gt; file.link as Note,
&gt; file.folder as Folder,
&gt; modifyDate as &quot;Last Modified&quot;
&gt; FROM &quot;&quot;
&gt; where 
&gt; 	date(split(modifyDate,&quot; &quot;)[0]) = date(&quot;2025-02-03&quot;) 
&gt; 	AND date(split(createDate,&quot; &quot;)[0]) != date(&quot;2025-02-03&quot;) 
&gt; 	AND file.path != this.file.path
&gt; sort modifyDate desc
&gt; ```

&gt; [!tldr]+ 往年今日
&gt; ```dataview
&gt; table without id
&gt; file.link as Note,
&gt; createDate as &quot;Created&quot;
&gt; FROM &quot;0-Daily_Note&quot;
&gt; where 
&gt; 	dateformat(date(split(createDate,&quot; &quot;)[0]),&quot;MM-dd&quot;) = dateformat(date(&quot;2025-02-03&quot;),&quot;MM-dd&quot;)
&gt; 	AND file.path != this.file.path
&gt; sort createDate desc
&gt; ```
</code></pre>
<h3 id="weeklyreview-2">WeeklyReview</h3>
<pre><code class="language-text">---
createDate: 2025-02-03 23:15
tags:
  - WeeklyReview
---
&lt;&lt; [[0-Daily_Note/2025/Periodic/W05|LastWeek:W05]] | [[0-Daily_Note/2025/Periodic/M02|MonthlyReview:M02]] | [[0-Daily_Note/2025/Periodic/W07|NextWeek:W07]] &gt;&gt;

---

# 周计划（双周为单位）
- [ ] 



---

# 本周回顾

&gt; [!info]+ DailyNote 回顾
&gt; ```dataview  
&gt; TABLE without id
&gt; file.link as Note,
&gt; file.folder as Folder,
&gt; createDate as &quot;Created&quot;
&gt; FROM &quot;0-Daily_Note&quot;
&gt; WHERE 
&gt; 	contains(tags, &quot;DailyNote&quot;) 
&gt; 	AND date(split(createDate,&quot; &quot;)[0]) &lt;= date({{date:YYYY-MM-DD}}) 
&gt; 	AND date(split(createDate,&quot; &quot;)[0]) &gt;= date({{date:YYYY-MM-DD}}) - dur(6days)
&gt; SORT createDate ASC
&gt; ```

## 本周完成了什么事情？学习到了什么？
- 

## 本周出现了哪些问题？原因是什么？
- 

## 我应该开始做哪些事情
- 

## 我应该停止做哪些事情
- 

---

# 本周笔记

&gt; [!example]+ 本周制作笔记
&gt; ```dataview  
&gt; TABLE without id
&gt; file.link as Note,
&gt; file.folder as Folder,
&gt; createDate as &quot;Created&quot;
&gt; FROM &quot;&quot;
&gt; WHERE 
&gt; 	!contains(tags, &quot;DailyNote&quot;) 
&gt; 	AND !contains(tags, &quot;WeeklyReview&quot;) 
&gt; 	AND date(split(createDate,&quot; &quot;)[0]) &lt;= date({{date:YYYY-MM-DD}}) 
&gt; 	AND date(split(createDate,&quot; &quot;)[0]) &gt;= date({{date:YYYY-MM-DD}}) - dur(6days)
&gt; SORT createDate ASC
&gt; ```

&gt; [!example]+ 本周修改笔记
&gt; ```dataview  
&gt; TABLE without id
&gt; file.link as Note,
&gt; file.folder as Folder,
&gt; modifyDate as &quot;Modified&quot;,
&gt; createDate as &quot;Created&quot;
&gt; FROM &quot;&quot;
&gt; WHERE 
&gt; 	date(split(modifyDate,&quot; &quot;)[0]) &lt;= date({{date:YYYY-MM-DD}}) AND 
&gt; 	date(split(modifyDate,&quot; &quot;)[0]) &gt;= date({{date:YYYY-MM-DD}}) - dur(6days) AND 
&gt; 	date(split(createDate,&quot; &quot;)[0]) &lt; date({{date:YYYY-MM-DD}}) - dur(6days)
&gt; SORT modifyDate ASC
&gt; ```
</code></pre>
<h3 id="monthlyreview-2">MonthlyReview</h3>
<pre><code class="language-text">---
createDate: 2025-02-03 23:15
tags:
  - MonthlyReview
---
&lt;&lt; [[0-Daily_Note/2025/Periodic/M01|LastMonth:M01]] | [[0-Daily_Note/2025/Periodic/M03|NextMonth:M03]] &gt;&gt;

---

# 月度计划KR（双月为单位）






# 本月回顾

&gt; [!info]+ WeeklyNote 回顾
&gt; ```dataview  
&gt; TABLE without id
&gt; file.link as Note,
&gt; file.folder as Folder,
&gt; createDate as &quot;Created&quot;
&gt; FROM &quot;0-Daily_Note&quot;
&gt; WHERE 
&gt; 	contains(tags, &quot;WeeklyReview&quot;) 
&gt; 	AND date(split(createDate,&quot; &quot;)[0]) &gt;= date({{date:YYYY-MM-DD}}) 
&gt; 	AND date(split(createDate,&quot; &quot;)[0]) &lt;= date({{date:YYYY-MM-DD}}) + dur(1months)
&gt; SORT createDate ASC
&gt; ```

&gt; [!example]+ 本月制作笔记
&gt; ```dataview  
&gt; TABLE without id
&gt; file.link as Note,
&gt; file.folder as Folder,
&gt; createDate as &quot;Created&quot;
&gt; FROM &quot;&quot;
&gt; WHERE 
&gt; 	!contains(tags, &quot;DailyNote&quot;) 
&gt; 	AND !contains(tags, &quot;WeeklyReview&quot;) 
&gt; 	AND !contains(tags, &quot;MonthlyReview&quot;) 
&gt; 	AND date(split(createDate,&quot; &quot;)[0]) &gt;= date({{date:YYYY-MM-DD}}) 
&gt; 	AND date(split(createDate,&quot; &quot;)[0]) &lt;= date({{date:YYYY-MM-DD}}) + dur(1months)
&gt; SORT createDate ASC
&gt; ```

&gt; [!example]+ 本月修改笔记
&gt; ```dataview  
&gt; TABLE without id
&gt; file.link as Note,
&gt; file.folder as Folder,
&gt; modifyDate as &quot;Modified&quot;,
&gt; createDate as &quot;Created&quot;
&gt; FROM &quot;&quot;
&gt; WHERE 
&gt; 	date(split(modifyDate,&quot; &quot;)[0]) &gt;= date({{date:YYYY-MM-DD}}) AND 
&gt; 	date(split(modifyDate,&quot; &quot;)[0]) &lt;= date({{date:YYYY-MM-DD}}) + dur(1months) AND 
&gt; 	date(split(createDate,&quot; &quot;)[0]) &lt; date({{date:YYYY-MM-DD}})
&gt; SORT modifyDate ASC
&gt; ```
</code></pre>
<h2 id="结语">结语</h2>
<p>以上是我目前的基于 Obsidian 的记录回顾系统。我感觉最妙的一点在于他可以把我每天的日常和情绪等各种事项都记录下来，并进行定期回顾。你可以说记录的是流水账，<strong>但要相信习惯养成后时间的力量</strong>。同时这套系统完全是构建在我的笔记系统之上的，极大的减少了记录的割裂感，后续可以通过 AI 插件实现全文本库的向量构建，达成更高层次的知识库。</p>
<p>缺点可能就是插入图片比较麻烦，因为我喜欢用图床而非本地存储。不过这种情况更多是分享，我会把他记录在我的日常唠嗑<a href="https://memo.laffitto.xyz/">詹詹碎言</a> 中，同步到 <a href="t.me/laffitto">TG 频道</a>里面，欢迎大家订阅关注。</p>
<p>每个人的生活都不一样，系统的构建也会随着生活不断变化改进。虽然这里我自认为呈现了一个较为完备的方案，但是更多的细节和构筑都需要依据每个人的情况去自适应改变。在日常不断的使用中，你会发现系统问题，可能你有更多的记录需求，可能某项完全是冗余，这时候大胆的删掉并改变吧。不断的调整改变找到合适自己的就是最好的。</p>
<hr>
<p>喜欢我的文章吗？请不要吝啬自己的思考想法，欢迎在留言区讨论或提出建议。</p>
<ul>
<li>如果您了解使用 RSS，可以使用 <a href="https://laffitto.xyz/feed.xml">https://laffitto.xyz/feed.xml</a> rss订阅我的网站。</li>
<li>另外我还通过 <a href="https://memo.laffitto.xyz/">memos詹詹碎言</a> 分享一些简短的生活和思考，可以使用 <a href="https://memo.laffitto.xyz/u/laffitto/rss.xml">https://memo.laffitto.xyz/u/laffitto/rss.xml</a> rss 订阅它。</li>
<li>如果您使用 Telegram，可以订阅我的个人频道 <a href="t.me/laffitto">TG 频道詹詹碎言</a>，里面直接同步了我上面两个部分内容。</li>
<li>您使用 <a href="https://follow.is/">follow</a>，可以搜索<strong>乱谈府</strong>订阅我的网站，欢迎大家的关注。</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2024总结]]></title>
        <id>https://blog.laffitto.xyz/post/2024-zong-jie/</id>
        <link href="https://blog.laffitto.xyz/post/2024-zong-jie/">
        </link>
        <updated>2025-01-01T13:20:40.000Z</updated>
        <summary type="html"><![CDATA[<p>2024回顾</p>
]]></summary>
        <content type="html"><![CDATA[<p>2024回顾</p>
<!-- more -->
<p>如果说2024用一个词去总结，我只能用这个稍显遗憾的词去表达：停滞。  不是说没有任何的进展，只是从广义上是没有什么物质的收获。</p>
<h2 id="遗憾">遗憾</h2>
<p>这两年吃了一个大亏，有的人我恨不得指着鼻子破口大骂。但同时我不得不感叹，多亏了这些，真的给我人生好好的上了一课。下面是我领悟出的道理，虽然听起来只是一些比较正常的建议，但是你要小心<strong>事物是变化的，初期展现的和后面发展呈现的可能不是一个东西，随时保持观察，评估利弊</strong>。</p>
<h3 id="要正视并小心那些处理各种人际关系的人">要正视并小心那些处理各种人际关系的人</h3>
<p>这些人在外面表现的很厉害，仿佛有各种头衔，跟你讲起东西来是来夸夸其谈，好像什么东西都知道一点。「我有个什么什么，我知道个什么什么，我跟那个谁什么什么」。你可能一开始会被糊弄到，<strong>但保持平常心看待就好</strong>，因为时间会让你看清对面究竟是否有能耐。而且对面表现其实和你是无关的，本质上不过是让自己装起来更厉害而已。地位不过是祖上传下来的，关系也只是位于那里而自然而然的接触到。你只需要保证好自己的教养平常面对就好，不要被影响。</p>
<h3 id="要小心满嘴答应的人和他们的承诺">要小心满嘴答应的人和他们的承诺</h3>
<p>满嘴答应只是敷衍，这些人通常办不成他们想做的事且眼高手低。事物的发展是复杂的，很多都需要评估并推进才能有结果，如果别人给了你一些条件但需要等待。<strong>请在自己内容设定死线，最多两个月</strong>。事件推动不了无疑是受到了阻碍，即便回复你原因，但只要你产生一丁点的怀疑那就可以表明就是拖延敷衍，及时止损收手。这些人说的话听一半可以了。要相信自己而不是寄托于他人。</p>
<h3 id="要慎重选择合作伙伴谨慎接受好意并评估">要慎重选择合作伙伴，谨慎接受好意并评估</h3>
<p>在现实中如果一个人对你表示好意，首先以坏事态度去评估：他是有目的的所以才接近我，他能给我什么利益，我能给他什么利益。即便达成了利益关系，<strong>请签订明确的合同</strong>。不要去用道德评估这些人，人不要脸，天下无敌。如果没有履行职责或内容，同上设定死线，及时止损。只需要一点点的试探就能知道对方靠不靠谱，不靠谱赶紧结束合作关系，不要有任何牵连。</p>
<h2 id="收获">收获</h2>
<p>不过这一年也是有一些收获的，人生总是需要去不断去探索。下面我列举一些个人觉得有意义的成就：</p>
<h3 id="daliynote-记录">DaliyNote 记录</h3>
<p>使用obsidian去进行模块化的每日记录，并进行每周回顾。我相信记录是有意义的，简单的记录一天干了什么，看了什么，有什么想法，能够帮我进行回忆和改进。虽然看起来短期影响不大，但后续的日积月累应该会引发质变。从去年约二季度开始坚持，已经成为我的习惯。同时整个流程我也在不断优化，看似很折腾，但是配置一次就基本能一直用，还是比较轻松。后面会专门出一篇文章去介绍详细的内容。</p>
<h3 id="量化交易">量化交易</h3>
<p>构建自己的量化投资系统。我从来没有奢求自己能够通过完全通过工作去实现财富自由，也还没有足够的眼界和勇气去进行创业，但我相信投资可以钱生钱。之前基本都是跟着投，也没有太多的思考和感悟。现在开始让自己用代码去进行一些量化和进一步的主动学习。虽然还是个新手，但我已将其列入需要终身学习的领域，慢慢积攒经验吧。</p>
<h3 id="跑步锻炼">跑步锻炼</h3>
<p>从上次体验感觉有轻微脂肪肝开始，大为震惊，决定要好好锻炼身体。在控制饮食的基础上开始跑步，中间一点一点加强，目前是每次跑5公里。2024 年总跑量有 535 千米，不过最后会多一公里恢复慢走，手表也记录进去了，真实跑量应该是 400 多千米。但是我也发现自己的心肺功能是真的差，跑了大概快大半年了，配速也才到 6 分半，再一快心率直接 170 往上了，希望能把这个习惯一直保持，跑步的时候很容易进入心流状态，保持身体的活性。</p>
<h2 id="具体实现">具体实现</h2>
<p>自己经常会把发生的一些事情记录下来，但是回顾下来还是不够。</p>
<h3 id="写作输出方面">写作输出方面</h3>
<p>2024 年<a href="https://laffitto.xyz/">博客长文</a>输出仅仅 9 篇，<a href="https://memo.laffitto.xyz/">memos短篇</a> 输出 54 项。个人觉得还是太少了，长文写作还是有点压力，自己还是需要再优化简化这个流程。短篇分享也需要增多，下一年争取做到更多的输出。</p>
<h3 id="读书输入方面">读书输入方面</h3>
<p>仅仅读了三本书，而且还没有整理出读书笔记，有点失败，倒是看了不少漫画。新年读书这方面还是需要多加强，因为之前看到一个说法觉得很有道理，大概是：你读好的短博文，那可能是作者花费了几天的心血所创作的，但读一本好书，可能是作者花费了几年甚至毕生精力创作的。所以拥抱长内容吧，那些破短视频也尽量少刷。</p>
<h3 id="旅行方面">旅行方面</h3>
<p>芜湖，香港，苏州，常州，大部分都是陪伴小徐的工作，忙里偷闲个一两天，但是也算是走了走。新年也希望能够做到行万里路。</p>
<h3 id="交际方面">交际方面</h3>
<p>和朋友聚会 6 次，和家人聚会 9 次，和小徐约会 34 次，中途可能有漏记但大概是这样。新年希望继续多多增加社交，今年把结婚的各种前置事项安排好，切勿辜负对方。</p>
<h3 id="其他方面">其他方面</h3>
<p>去年也没添啥东西，3 月时候把三星 S22U 换成了 Fold5，折叠屏使用感极佳，用了就回不去。12 月继承了小徐的 iphone14，替代了之前的备用机 iphoneX。这两个电子设备带给我极好的使用体验，安卓折腾苹果养老，相辅相成。游戏也玩了一些，比较喜欢的单机有黑神话悟空，动物井和小丑牌。不过最喜欢的还是游戏王大师决斗，打牌真的太快乐了。</p>
<p>2024 已然度过，2025 开始，但昨天和今天没有什么两样，后悔都已是过去，把握当下，靠自己强化自己的能力与视野才是王道，加油吧少年！2024 的最后最后，跨年听了五月天的线上演唱会，发现我还是很喜欢他们。他们的专辑创作歌曲还是令人动容，会给我一种在低谷时依旧想向前的力量，<strong>逐渐变得愈发平和的面对每一天，内生出一股坚毅的力量，面对这个世界。</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[网格交易]]></title>
        <id>https://blog.laffitto.xyz/post/StrategyGridv1/</id>
        <link href="https://blog.laffitto.xyz/post/StrategyGridv1/">
        </link>
        <updated>2024-11-29T03:34:17.000Z</updated>
        <summary type="html"><![CDATA[<p>量化交易初尝试</p>
]]></summary>
        <content type="html"><![CDATA[<p>量化交易初尝试</p>
<!-- more -->
<p>本文所有内容均为个人见解。仅表示自己在当前认知情况下自认为正确的观点所作出的行为，如有异议还请谅解与提出交流。头图来自 https://invest101.com.hk/grid-trading</p>
<h2 id="心路历程">心路历程</h2>
<p>自己也算是投资市场多少年的韭菜了，虽然玩的都是小钱，最后统计下来还是亏多赢少。以前读了点小书，看了点小文章，立马自信心爆棚，觉得其他交易者都是定力不行，自己不会被市场的情绪左右。交易过程天天说定投，相信时间的力量，投到后面资金不够，也不知道何时止盈止损，看着赚了以为自己牛逼，看着跌了就闭嘴装死。当然我这里不是指一些会发出信号的主动型基金，而是纯粹自己自我感知良好的操作，现在回首看过去，没有明确的系统与目的，进入投资市场无异于赌博。</p>
<p>近几个月决定自己做一点量化的尝试，毕竟一个东西门槛越高，越少的人会去尝试。赛道越少，竞争越少。虽然大的机构也会有专门的量化投资部门，但毕竟会顾虑到资金和面向市场等多方面因素，和个人投资者要考虑的东西完全不一样。况且人家也不会分享给你他们的策略。投资要趁早，既然自己有一定的能力与基础，早点研究就当是玩玩也是有趣的。</p>
<p>量化过程，简化来说大体可以分为如下几部分：数据收集，策略构建和策略回测。数据收集就是选择合适的平台，能够持续稳定准确的给你提供想要研究市场的数据。策略构建是选择合适的策略或是通过机器学习/深度学习训练得到策略。不同的策略同样有着众多的超参数，构建一个合适的模型同样需要考虑其准确性和泛化性。回测过程考虑最终的指标，可能是夏普比率，又可能仅是利润率，具体情况具体分析。本质上和众多科研流程类似，有科学研究内味了。</p>
<p>对于一个策略来说，核心关键点就是信号（何时交易）和数量。在什么时间买入或卖出，交易的过程具体数量是多少。一步步拆解下来就是：构建好自己的框架，模拟这个过程，选择好合适的品种，同时保证准确性和泛化性。</p>
<p>有些人相信价值投资，进行基本面的研究，但是我感觉自己的认知和眼光还是不够，况且我也拿不到单一公司真正内部的资料，又何来了解一说。现阶段不如交给机器去选择，少一点自己的主观能动性吧。</p>
<h2 id="网格交易策略">网格交易策略</h2>
<p>经过一段时间的探索，掌握了一些皮毛，目前仍然有许多知识盲点与专业性的东西需要慢慢领会。这里先从简单的入手复现一个以前使用过的网格交易策略。</p>
<p>网格交易主要是在震荡环境中非常有效的策略。随着设定合适的买入卖出网格区间，在区间中做到低价买入，高价卖出，赚一点点中间的波动价格差。</p>
<p>在进行网格交易中有以下关键的点：</p>
<ol>
<li>选定合适的品种。例如指数类 ETF（沪深 300，中证 500，兴全趋势混合，创业板指），财务稳定的（银行，保险），可以长期持有的股票等等。</li>
<li>选定好合适的价格区间。等差区间，等比区间，或是其他更多的策略。</li>
<li>做好压力测试，提前明确定好上下区间进行止盈止损。以及超出区间后如何进行后续操作。</li>
</ol>
<h2 id="策略编写">策略编写</h2>
<p>这里选择之前实战中使用过的万马股份 (SZSE:002276) 作为研究对象。后续会对更多的品种进行测试。</p>
<p>回测框架经过多方面对比，我选择了现在在持续维护且运行效率较高的 vectorbt 的付费版本 <a href="https://vectorbt.pro/">VectorBT PRO</a>。当然也可以选择一些免费的框架如 <a href="https://github.com/vnpy/vnpy">vnpy</a>。</p>
<p>如下代码在jupyter notebook中运行，暂不考虑优化效率和面向对象编程，仅初步展示和参考。<br>
导入相关库</p>
<pre><code class="language-python">import vectorbtpro as vbt  
import numpy as np  
import pandas as pd
</code></pre>
<p>从 tradingview 抓取相关数据，以天为单位的K线</p>
<pre><code class="language-python">list_name = vbt.TVData.list_symbols(symbol_pattern=&quot;002276&quot;)  
data = vbt.TVData.pull(&quot;SZSE:002276&quot;)
data.stats()

输出
Start Index            2009-07-10 01:30:00+00:00
End Index              2024-11-13 01:30:00+00:00
Total Duration                3623 days 00:00:00
Total Symbols                                  1
Null Counts: 002276                            0
Name: agg_stats, dtype: object
</code></pre>
<p>选取特定时间段并可视化K线</p>
<pre><code class="language-python">close = data.get('Close')
data=data.loc['2018-01-01':]
data.plot().show()
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202411281614777.png" alt="image.png" loading="lazy"></figure>
<p>定义一个等差网格区间</p>
<pre><code class="language-python"># 等差计算 输入上下区间，目标投入金额，计划网格数 得到每格买入价格间隔，每格买入数量  
def arithmetic_grid(price_low, price_high, initial_fund, grid_num):  
    # 计算每格价格的差价  
    grid_price_interval = round((price_high - price_low) / (grid_num-1),4)  
    # 等差数列计算公式  
    total_multiplier = grid_num * (price_low + price_high) / 2  
    # 计算每格的交易数量，使得总和符合初始资金  
    share_number = int(initial_fund / total_multiplier)  
    print(f&quot;每格交易价格间隔: {grid_price_interval}，每格交易数量: {share_number}&quot;)  
    # 交易间隔  
    grid_interval = [round(price_low + i * grid_price_interval, 4) for i in range(grid_num)]  
    return grid_price_interval,share_number,grid_interval
</code></pre>
<p>设定网格最低价价为 6，最高价格 12，总计划投入金额 10000，网格数量 10</p>
<pre><code class="language-python">grid_price, grid_amount, grid_interval = arithmetic_grid(price_low=6, price_high=12, initial_fund=10000, grid_num=10)  
grid_interval

输出：
每格交易价格间隔: 0.6667，每格交易数量: 111
[6.0,
 6.6667,
 7.3334,
 8.0001,
 8.6668,
 9.3335,
 10.0002,
 10.6669,
 11.3336,
 12.0003]

</code></pre>
<h4 id="gridv1">Gridv1</h4>
<p>定义最基本简单的网格交易策略：采用每次交易相同数额，输出 direction 表示买卖信号，输出 grid_interval 表示网格间隔，仅用于可视化。</p>
<pre><code class="language-python">## 针对股票买入特定份数  
## 每一次买入卖出都会重置基准单位  
  
# 策略在执行之前先买入一定比例，后续使用网格进行交易测算。如果基金呈现上涨趋势，建仓比例较大可以吃到更多利润  
# init_position 初始建仓份数  
# init_price 建仓时价格  
# position_size 已建仓的金额  
# remain_cash 用于执行网格的金额  
# units 持有的仓位  
# base_unit_price 基准买入价格  
# today_unit_price 当日价格  
  
def stock_grid_line_v1(close, remain_cash, init_position,price_low=6, price_high=12):  
      
    init_price = close.iloc[0]  
    units = init_position    
      
    base_unit_price = close.iloc[0]  
    direction = pd.Series(np.full(data.shape[0], 0), index=data.index)  
    # size = pd.Series(np.full(data.shape[0], 0), index=data.index)  
    # 计算网格大小和每格交易数量，采用等差方式  
    grid_price, grid_amount,grid_interval = arithmetic_grid(price_low=price_low, price_high=price_high, initial_fund=remain_cash, grid_num=10)  
    print(f&quot;初始买入价格{init_price}&quot;)  
      
    for i in range(1, close.shape[0]):  
        today_unit_price = close.iloc[i]  
          
        # 超出交易区间不做交易  
        if today_unit_price&lt;price_low or today_unit_price &gt; price_high:  
            continue  
        ## sold operation  
        # 当日价格高于网格价，且手里有持仓有剩余  
        if today_unit_price &gt;= base_unit_price+grid_price and units &gt;= grid_amount:  
            units -= grid_amount  
            remain_cash += grid_amount*today_unit_price  
            direction.iloc[i] = -1  
            #重置基准单位  
            base_unit_price = today_unit_price  
              
        ## buy operation  
        # 当日价格低于网格价，且手里有现金  
        if today_unit_price &lt;= base_unit_price-grid_price and remain_cash &gt;= grid_amount*today_unit_price:  
            units += grid_amount  
            remain_cash -= grid_amount*today_unit_price  
            direction.iloc[i] = 1  
            #重置基准单位  
            base_unit_price = today_unit_price  
  
                         
    return direction,grid_interval
</code></pre>
<p>设定总计划最多投入金额 10000，初始建仓 400 股</p>
<pre><code class="language-python">direction,grid_interval = stock_grid_line_v1(close,10000,400)

输出：
每格交易价格间隔: 0.6667，每格交易数量: 111
初始买入价格8.7
</code></pre>
<p>可视化</p>
<pre><code class="language-python">def plot_entry_exit(close, entries, exits, basic_line, grid_interval):  
    fig = close.vbt.plot()  
    entries.vbt.signals.plot_as_entries(close, fig=fig)  
    exits.vbt.signals.plot_as_exits(close, fig=fig)  
    fig.add_shape(  
        type=&quot;line&quot;,  
        x0=0, x1=1,  # 横坐标范围，0到1表示整个x轴的宽度  
        y0=basic_line, y1=basic_line,  # y0=y1=7 表示水平线位置  
        xref='paper',  # 使用 'paper' 参考系确保线条延伸到整个图宽  
        line=dict(color=&quot;Red&quot;, width=2, dash=&quot;dash&quot;)  # 设置线条颜色、宽度和样式  
    )  
    for interval in grid_interval:  
        fig.add_shape(  
        type=&quot;line&quot;,  
        x0=0, x1=1,  # 横坐标范围，0到1表示整个x轴的宽度  
        y0=interval, y1=interval,  # y0=y1=7 表示水平线位置  
        xref='paper',  # 使用 'paper' 参考系确保线条延伸到整个图宽  
        line=dict(color=&quot;Blue&quot;, width=2, dash=&quot;dash&quot;)  # 设置线条颜色、宽度和样式  
    )  
    print(f'买入点数量{entries.vbt.signals.total()},卖出点数量{exits.vbt.signals.total()}')  
    return fig.show()
</code></pre>
<p>由于时间有一定滞后性，默认为得到交易信号后一天才开始交易。</p>
<pre><code class="language-python"># 实际操作买入卖出时间向后推迟一个单位
entries = (direction == 1).vbt.signals.fshift() 
exits = (direction == -1).vbt.signals.fshift()
plot_entry_exit(close,entries,exits,basic_line=close.iloc[0],grid_interval=grid_interval)
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202411281645243.png" alt="image.png" loading="lazy"></figure>
<p>进行实际回测，这里主要依赖vectorbt自带的回测方法，直接调用即可。忽略手续费。</p>
<pre><code class="language-python">pf = vbt.Portfolio.from_signals(  
    close=close,   
    entries=entries,   
    exits=exits,   
    init_cash=10000, # 初始资金  
    init_position= 400, #初始仓位  
    init_price = close.iloc[0], #初始建仓金额  
    size=111, # 使用amount类型，每次进行固定股数的交易  
    size_type=&quot;amount&quot;,  
    # fees=0.001,  
    accumulate=True,  
)
pf.stats()
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202411281649054.png" alt="image.png" loading="lazy"></figure>
<p>输出解析</p>
<ul>
<li>Total Return 最终投资利润增长</li>
<li>Benchmark Return 基线收益（一直持有收益）</li>
<li>Total Time Exposure 总暴露在市场中的时间</li>
<li>Max Gross Exposure 最大交易中使用的现金量</li>
<li>Max Drawdown 最大回撤，即组合价值在创下新高后下跌的最大距离</li>
<li>Total Orders 总订单次数</li>
<li>Total Trades 总交易次数。Vectorbt 中仅卖出操作计作交易。一旦卖出订单被执行（通过减少或关闭 position），就会根据加权平均进入和退出价格计算损益 (the profit and loss, PnL)</li>
<li>Win Rate 交易（卖单）产生利润的概率</li>
<li>Best Trade 最好交易的利润率</li>
<li>Worst Trade 最差交易的利润率</li>
<li>Profit Factor 利润因子</li>
<li>Expectancy 预期 average profitability 平均盈利能力</li>
</ul>
<p>回报率 25%，还是可以的。</p>
<h3 id="gridv2">Gridv2</h3>
<p>简单改进一下网格策略：每次交易网格后，下一个网格按照一定比例增加份额。输出多增加一个 size ，表示交易的数量</p>
<pre><code class="language-python">## 针对股票买入特定份数  
## 每一次买入卖出都会重置基准单位  
## 大网格增加份额。  
  
# 策略在执行之前先买入一定比例，后续使用网格进行交易测算。
# init_position 初始建仓份数  
# init_price 建仓时价格  
# position_size 已建仓的金额  
# remain_cash 用于执行网格的金额  
# units 持有的仓位  
# base_unit_price 基准买入价格  
# today_unit_price 当日价格  
  
def stock_grid_line_v2(close, remain_cash, init_position,price_low=6, price_high=12):  
    init_price = close.iloc[0]  
    units = init_position  
  
    base_unit_price = close.iloc[0]  
    direction = pd.Series(np.full(data.shape[0], 0), index=data.index)  
    size = pd.Series(np.full(data.shape[0], 0), index=data.index)  
  
    # 计算网格大小和每格交易数量，采用等差方式  
    grid_price, grid_amount, grid_interval = arithmetic_grid(price_low=price_low, price_high=price_high, initial_fund=remain_cash,  
                                                             grid_num=10)  
    print(f&quot;初始买入价格{init_price}&quot;)  
  
    # 记录操作位置  
    position_grid = 0  
    # 增加网格份额   
    grid_amount_increase = int(grid_amount * 0.02)  
    print(f&quot;网格增加数量{grid_amount_increase}&quot;)  
  
    for i in range(1, close.shape[0]):  
        today_unit_price = close.iloc[i]  
        buy_grid_amount = grid_amount + grid_amount_increase * position_grid  
        sell_grid_amount = grid_amount + grid_amount_increase * position_grid  
          
        # 超出交易区间不做交易  
        if today_unit_price&lt;price_low or today_unit_price &gt; price_high:  
            continue  
  
        ## sold operation  
        # 当日价格高于网格价，且手里有持仓有剩余  
        if today_unit_price &gt;= base_unit_price + grid_price and units &gt;= sell_grid_amount:  
            units -= sell_grid_amount  
            remain_cash += sell_grid_amount * today_unit_price  
            direction.iloc[i] = -1  
            size.iloc[i] = sell_grid_amount  
  
            # 重置调整基准  
            base_unit_price = today_unit_price  
            position_grid -= 1  
  
        ## buy operation  
        # 当日价格低于网格价，且手里有现金  
        if today_unit_price &lt;= base_unit_price - grid_price and remain_cash &gt;= buy_grid_amount * today_unit_price:  
            units += buy_grid_amount  
            remain_cash -= buy_grid_amount * today_unit_price  
            direction.iloc[i] = 1  
            size.iloc[i] = buy_grid_amount  
  
            # 重置调整基准  
            base_unit_price = today_unit_price  
            position_grid += 1  
  
    return direction, size, grid_interval
</code></pre>
<p>选取和之前相同的参数模拟</p>
<pre><code class="language-python">direction, input_size, grid_interval = stock_grid_line_v2(close,10000,400)

输出：
每格交易价格间隔: 0.6667，每格交易数量: 111
初始买入价格8.7
网格增加数量5
</code></pre>
<p>可视化</p>
<pre><code class="language-python">entries = (direction == 1).vbt.signals.fshift() 
exits = (direction == -1).vbt.signals.fshift()
# 传入的每次交易数量也需要移位  
input_size = input_size.shift(1, fill_value=0)
plot_entry_exit(close,entries,exits,basic_line=close.iloc[0],grid_interval=grid_interval)
</code></pre>
<figure data-type="image" tabindex="4"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202411282227673.png" alt="image.png" loading="lazy"></figure>
<p>回测</p>
<pre><code class="language-python">def signal_func_nb_v2(c, long_signals, short_signals, size,input_sizes):  
    long_signal = vbt.pf_nb.select_nb(c, long_signals)  
    short_signal = vbt.pf_nb.select_nb(c, short_signals)  
    input_size = vbt.pf_nb.select_nb(c, input_sizes)  
    if long_signal:  
        print(f'buy {input_size} amount')  
        size[0, c.col] = input_size  
    if short_signal:  
        print(f'sell {input_size} amount')  
        size[0, c.col] = input_size  
    return long_signal, False, short_signal, False  
pf = vbt.Portfolio.from_signals(  
    close=close,   
    init_cash=10000, # 初始资金  
    init_position= 400, #初始仓位  
    init_price = close.iloc[0], #初始建仓金额  
    signal_func_nb=signal_func_nb_v2,  
    signal_args=(  
        vbt.Rep(&quot;long_signals&quot;),   
        vbt.Rep(&quot;short_signals&quot;),   
        vbt.Rep(&quot;size&quot;),  
        vbt.Rep(&quot;input_sizes&quot;)      
    ),  
    size=vbt.RepEval(&quot;np.full((1, wrapper.shape_2d[1]), np.nan)&quot;),    
    size_type=&quot;amount&quot;,  
    accumulate=True,  
    broadcast_named_args=dict(  
        long_signals= entries,  
        short_signals=exits,  
        input_sizes=input_size,  
    ),  
    jitted = False  
)
pf.stats()
</code></pre>
<p><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202411282229197.png" alt="image.png" loading="lazy"><br>
就回报率而言没有太大变化，但是其他指标有所提升。</p>
<p>值得注意的是，这个策略的超参数很多，网格上下限，网格数量，准备投入金额，初始建仓数量，都可以选取改变。况且就股票市场来说，买入的数量基本都是以1手为单位，上述的111交易份额实际不符合预期。</p>
<p>策略也有很多优化空间，比如入场时机或许可以选择一些参数联合判断（如 EMA ，RSI 等）。</p>
<p>Vectorbt 的优势就在于能够快速的遍历测试大规模数据的情况，进而从中选取合适的超参数。这里限于篇幅和进度，先暂时分享上述内容。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Obsidian好用AI插件]]></title>
        <id>https://blog.laffitto.xyz/post/obsidian-hao-yong-ai-cha-jian/</id>
        <link href="https://blog.laffitto.xyz/post/obsidian-hao-yong-ai-cha-jian/">
        </link>
        <updated>2024-10-11T14:40:11.000Z</updated>
        <summary type="html"><![CDATA[<p>自用好用的AI插件</p>
]]></summary>
        <content type="html"><![CDATA[<p>自用好用的AI插件</p>
<!-- more -->
<p>目前自己主要的笔记工具为 Obsidian。自从见识到各种在线笔记工具的不靠谱后，逐渐将自己的笔记存放在本地，方便随时进行迁移。Obsidian 作为蓬勃发展的本地笔记工具成了我的主力，小到每天的记录，大到笔记的组织和博客的撰写，基本都存放其中。</p>
<p>随着这两年 AI 的发展，笔记工具的 AI 属性已然成为一个强大的卖点，NotionAI 的很多功能让人眼馋。好在 Obsidian 有着强大的社区插件支持，在各路大神的加持下，Obsidian 也可以集成众多的 AI 功能。这里推荐几个在目前时间点我用着比较好的插件。其中是否持续更新是一个比较看重的点，有更好的插件也欢迎分享。</p>
<h2 id="copilot">Copilot</h2>
<p><a href="https://github.com/logancyang/obsidian-copilot">Copilot</a> 名字和微软推出的 copilot 重名，旨在 obsdian 进行模型的对话。在设置好在线或者本地（ollama）模型后，其可以在右侧的对话框中直接进行问答。当然可以提前设定好并调用特定的 prompt，得到更加无缝的体验。完整的回答可以直接保存到 Obsidian 文件中，方便后续参考。<br>
另外它可以进行长文的回答和整个知识库的回答。通过设定的 embedding 模型将文章全部向量化，你就可以对单篇文章甚至这个 Obsidian 库中进行提问，当然这会耗费大量的 token，效果上目前不算太好，但是作者一直在进行改进优化，未来可期。<br>
特点：</p>
<ul>
<li>Obsidian 里直接调用模型进行对话。并有着高效的模型增加和替换的流程。</li>
<li>实验性质的长文和知识库回答。<br>
缺点：</li>
<li>不能够删除预置模板的模型，显得模型列表非常臃肿。</li>
<li>知识库回答效果暂时不太好，应该和 RAG 流程优化有关。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202410102322446.png" alt="image.png" loading="lazy"></li>
</ul>
<h2 id="smart-connections">Smart Connections</h2>
<p><a href="https://github.com/brianpetro/obsidian-smart-connections">Smart-connections</a> 同样可以在单独的界面进行模型对话，这一点于 copilot 类似。不过它最吸引我的功能在于它可以实现通过 embedding 将库里的文章向量化，计算文章间相似度，然后在右侧栏展示一些相关的内容。向量化可以基于文章，也可以更细一步基于特定的 block。这样在进行文章查看回顾时可以直接参考，从某种程度上也是一种自动化的双向链接。<br>
特点：</p>
<ul>
<li>Obsidian 里直接调用模型进行对话。</li>
<li>基于本地库，通过相似度推荐和当前文章高相关性的文章或段落。<br>
缺点：</li>
<li>插件设置较为繁琐，且近几次更新频繁导致界面较乱。</li>
<li>embedding模型暂时无法自定义，且 embedding速度较慢需要优化。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202410102314331.png" alt="image.png" loading="lazy"></li>
</ul>
<h2 id="text-generator">Text Generator</h2>
<p><a href="https://github.com/nhaouari/obsidian-textgenerator-plugin">Text Generator</a> 主要是辅助文章的书写流程。它的主要功能是基于 AI 大模型的生成功能，基于模板和上下文要求在文章界面进行文章的撰写生成。不过这个插件目前用的不多，毕竟没有用 AI 写文章的需求，没有深究其特性。<br>
特点：</p>
<ul>
<li>基于正文内容的无缝书写体验，似乎是所有插件中独一份的。</li>
<li>有官方的模板仓库用于参考。<br>
缺点：</li>
<li>体验暂时较少残缺，暂未发现使用场景。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202410112153057.png" alt="image.png" loading="lazy"></li>
</ul>
<p>如上介绍的三个 AI 插件是我觉得在 Obsidian 的 AI 插件中质量较高，时常维护的优秀插件。插件的不足相信都会在持续的更新中得以优化并解决。每个插件都有自己的侧重点与特点，例如我使用 Copilot 的模型问答功能，使用 Smart Connection 的相似度联想功能，使用 Text Generator 模板调用功能。取舍相辅相成使用它们各自最优秀的部分，可以给自己带来最好的 Obsidian 使用体验。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[游戏 黑神话悟空]]></title>
        <id>https://blog.laffitto.xyz/post/you-xi-hei-shen-hua-wu-kong/</id>
        <link href="https://blog.laffitto.xyz/post/you-xi-hei-shen-hua-wu-kong/">
        </link>
        <updated>2024-09-21T14:45:59.000Z</updated>
        <summary type="html"><![CDATA[<p>一段开心的游玩体验</p>
]]></summary>
        <content type="html"><![CDATA[<p>一段开心的游玩体验</p>
<!-- more -->
<p>相信前段时间大家都被黑神话悟空给刷屏了。我在看完最终预告片后也直接热血沸腾入手了一份。经过一段时间的游玩，目前总游戏时长 45小时，把支线和隐藏基本都探索了一遍，打了真结局，刚刚进入二周目。要说黑猴属于魂类游戏吧，他倒也没有其他魂类游戏那种可怕的死亡惩罚，这使得游戏过程不会有太多的心理压力，玩艾尔登法环死亡掉魂的感觉太难受，以至于打到一半失去热情闲置了。游戏整体体验非常爽，扮演天命人寻找六根踏上旅程让人过分沉醉。</p>
<h2 id="游戏各方面体验">游戏各方面体验</h2>
<p>画面上，可能是虚幻引擎 5 的加持，觉得每个画面去截图都是那么的震撼。游戏科学团队进行了大量的实地取景，游玩体验从浮屠塔到小西天，包括黑风山，黄风岭和盘丝洞，感受到一种身临其境的感觉。Boss 设计也让人眼前一亮，除了每关设计的剧情大 boss，各种小怪和头目设定的也非常有趣，特别是内置的影神图怪物图鉴，大大加丰富了各个出场人物的背景细节。细品之下不由觉得每个人物都有自己的小心思，精彩至极。</p>
<p>操作上，有精魄，变身，法术的加持，外加各种不同的棍势，使得打法流派丰富多样。你既可以使用安身法正面硬刚，也可以毛毛流多种组合一套带走，像我比较菜的就习惯使用安身法加立棍的轮椅打法，照样可以慢慢磨通关。</p>
<p>内容上，感觉量大管饱。在玩完第一关较为线性的流程后，先被游戏的精美画面和战斗场景震惊。第二关开始就有各种岔路，外加奇奇怪怪的探索，加上敌人强度明显提升，顿时觉得有点东西。第三关和第四关更是有一种柳暗花明又一村的感觉，感觉快到头了，居然又又又到了一个新的场景，不免热血沸腾。第五章倒是感觉流程较短，但是加上隐藏地图依旧惊艳。第六章整个地图可以使用筋斗云随意探索，也算是一个小场景的开放世界，也从中体会了别样的乐趣。在打完杨戬后法天象地的环节，正酣的打斗加上出彩的 cg 演出，直接把我玩高潮了。游戏可以进行多周目的游玩，如果说一周目不是完全体有点受苦，二周目得到好的装备再去收集时简直变成了爽游，曾经吃过的亏与苦都可以在二周目加倍奉还，一份价格，两种体验，爽麻了。</p>
<p>剧情上，我个人觉得没啥大问题，黑神话悟空仅仅是在原先西游记的世界观基础上再次创作而已。第一章的贪嗔痴，第二章不可仅听一面之词的道理，第三章黄眉的背道哲学，第四章八戒和蜘蛛精的凄美爱情故事，第五章红孩儿的身世和回忆过往，第六章加上隐藏剧情的铺垫，尽管有些细微的地方可能不同人看会有槽点，但是完全达不到有些 B 站 up 主破口大骂剧情稀烂的程度。那些人拿着西游记的原作去分析原意哲学，大骂游戏科学对其进行的胡编，但是人家只是基于原著的改编了，也不至于如此上纲上线，在我看来像是未免为了突出自己思想观点的不同强行当跳梁小丑罢了。</p>
<p>当然不容质疑还是有一些缺点的，比如游戏中有一些莫名其妙的空气墙。以为能过去但实际过不去，以为过不去却又能过去，难免会导致探索过程中碰壁或者错过一些东西。而且游戏没有小地图，有些特殊场景就比较容易迷路，但由于也不是开放世界，多转悠两圈也能找到正确的地方。更何况有民间大神自主开发出游戏跳跃空气墙和小地图的补丁，如果真需要可以去下载。这些小问题在优秀的游戏体验面前都不是事了。</p>
<h2 id="游戏评价">游戏评价</h2>
<p>虽然今年还未过完，但这应该是我自己的年度游戏了，总体差强人意，但我依旧给出 10 分的满分评价。游玩的这段时间是真心沉醉于游戏塑造的世界里，有挑战，但更多的轻松和探索的快乐。对比服务型游戏，买断制游戏通常是吃力不讨好的那种。但是买断制游戏带给人的幸福感是远远高于服务型游戏的。服务型游戏通常是有线上博弈的成分，赢了固然舒服，但也让人觉得疲惫，外加这类游戏需要每天做那些无聊的任务，甚至有些极其黑心的氪金系统，常常会觉得到底是我在玩游戏还是游戏在玩我，花钱又花时间。买断制游戏通常是有一个不断成长最终到达终点的过程，而这一路的旅途收集，好的游戏会让人沉浸其中极其愉悦，这点任天堂很会，旷野之息王国之泪等其他作品都让我获得了无穷的乐趣，我很开心黑神话悟空也让我感受到了同样的快乐。</p>
<h2 id="游戏展望">游戏展望</h2>
<p>截至目前，黑神话单 steam 的销量大概都快有 2000 万份了。作为中国自己的第一款 3A 大作，从结果上看这无疑是口碑和商业上的巨大成功。从前大家（包括我自己）总是嘲讽中国这环境根本做不出 3A 级别的游戏作品，这次终于被打了脸。这次成功的尝试给之后的游戏工作室提供的了宝贵的经验，未来可能会有更多的国产 3A 大作面世。不过我觉得可能还是改变不了什么，在品尝到网游与手游躺着就能收钱模式的甜头后，累死累活多年磨一剑，且根本不确定能否成功的情况下，这种试错对大多数企业还是太奢侈了。而且另一方面黑神话悟空过于优秀，直接给国内行业立了一个巨高的标杆，悲观的猜想是出道即巅峰。不过但愿我所说的都是屁话，希望国内的 3A 产业会以此为导火索，更加蓬勃的发展，结合中国传统文化发扬光大，为游戏作为第九艺术真正的正名。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[香港银行卡]]></title>
        <id>https://blog.laffitto.xyz/post/xiang-gang-yin-xing-qia/</id>
        <link href="https://blog.laffitto.xyz/post/xiang-gang-yin-xing-qia/">
        </link>
        <updated>2024-08-10T15:19:45.000Z</updated>
        <summary type="html"><![CDATA[<p>五一去香港旅游的时候，顺便办理了香港银行卡，这里记录一些经验分享。</p>
]]></summary>
        <content type="html"><![CDATA[<p>五一去香港旅游的时候，顺便办理了香港银行卡，这里记录一些经验分享。</p>
<!-- more -->
<p>这次一次性办理了两张银行卡，中国银行香港和汇丰银行。两个银行办理的流程不一样，但是很幸运一次性搞定。</p>
<h2 id="准备工作">准备工作</h2>
<p>办理银行卡需要以下物品</p>
<ul>
<li><strong>中国居民身份证</strong></li>
<li><strong>港澳通行证或护照</strong></li>
<li><strong>入境小票</strong>: 入境的时候打印的凭证。</li>
<li><strong>港币现金</strong>: 激活实体银行卡用</li>
</ul>
<p>有些教程说还需要<strong>内地地址证明</strong>，例如信用卡账单、水电缴费账单等，需要是本人名字的地址，时间需为近 3 个月。我准备了但这次完全没有用上。同时需要导出出入境记录: 微信小程序 <code>移民局12367</code> &gt; <code>中国公民服务</code> &gt; <code>出入境记录查询</code> 导出记录。</p>
<p>参考教程主要如下:</p>
<ul>
<li><a href="https://tumutanzi.com/archives/17252">香港银行开户经验 – 土木坛子</a></li>
<li><a href="https://luolei.org/how-to-open-a-bank-account-in-hongkong-2024">香港银行开户：2024 年更新 | 中银、汇丰、众安开户经验分享 | 罗磊的独立博客</a></li>
</ul>
<h2 id="办理流程">办理流程</h2>
<p>办理卡需要看好银行营业时间，当时五一期间 1 号放假，2~3 号上班，4 号仅上午上班。因为住宿的酒店位于荃湾区，我选择的 2 号上午早上九点就直接去银行那边办理。从结果来看，两个银行都是可以事先预约的，但是当时有些经验说预约不上，所以我选择了直接去现场办理。</p>
<p>中国银行香港基本可以做到自助办理。进入网点后，全部的操作可以在自助机上进行，通过扫码操作，上传身份证，港澳通行证，入境记录，填入一些收入信息，仅有一个工作人员在旁边答疑。如果审核顺利的话，3 分钟刷新后就显示办理完成，效率高的不敢想象。注册完成后，需要在旁边的 ATM 上存入现金进行账户激活。实体银行卡大概 2 至 3 周左右会邮寄到预先填好的地址。</p>
<p>汇丰银行办理的过程比较费时。进去之后人挺多，如果没有预约的话就需要排队，而且他们是纯人工审核，时间会比较久。叫到号之后工作人员会带你进入一个小屋里面谈，主要就是证明一下自己的积蓄，有足够的能力在这里储蓄，填写一下各种信息。最终判断你能不能办卡还是根据网上系统的判断，这点和中国银行比较类似，所以面谈时保持理直气壮点就可以。在网上系统审核通过后，汇丰会当场给你卡并协助你激活。网点还直接帮我激活了人民币和美元一些业务。服务比较周到。</p>
<p>对比两家银行，中国银行香港可以自助办理，从申请到激活全程在机器上操作。整体速度快，效率高，但业务可能不会那么细致。汇丰银行需要排队等待，其中有人工的干预，申请流程会更细致，服务更好，有疑问也可以当面咨询。但是花费时间较长，申请和激活都要排队，而且等待休息区没有座位，比较累。不过两家银行一共花费了大概两个小时拿下两张卡，还是比较满意的。</p>
<figure data-type="image" tabindex="1"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202408102323384.jpg" alt="" loading="lazy"></figure>
<h2 id="关于银行之间转账">关于银行之间转账</h2>
<p>香港账户之间可以通过「转数快」达到无手续费转账，内地账户之间也可以通过云闪付达成无手续费转账。但是香港和内地之间账户就涉及到跨境转账，通常需要手续费和电报费，加起来也是一笔不小的费用了，不过内地的中国银行和中国银行香港账户之间转账是可以做到免上面两种手续费的。详情可以参考这篇文章：</p>
<p><a href="https://mp.weixin.qq.com/s/FBovMycS3UPK_WNQjpPFIA">无损跨境转账，真香</a></p>
<p>文章写的很细致，经测试从香港转到内地无需费用，内地转香港最后一步由于银行需要物理密码器动态口令暂时未测试，不过问题应该是不大。</p>
<h2 id="办理银行卡原因">办理银行卡原因</h2>
<p>持有香港银行卡，主要还是多了一种工具。这就像是梯子一样，很多的东西都要通过它作为一种媒介去探索。无论是投资港股，中转转账，海外购物它都能胜任。当我看到新的东西，新的机会时，我不会因为手里没有某些工具而失之交臂。优势能够积少成多，这就已经足够了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[游戏 Animal Well]]></title>
        <id>https://blog.laffitto.xyz/post/you-xi-animal-well/</id>
        <link href="https://blog.laffitto.xyz/post/you-xi-animal-well/">
        </link>
        <updated>2024-05-29T15:44:35.000Z</updated>
        <summary type="html"><![CDATA[<p>一个独特的独立游戏</p>
]]></summary>
        <content type="html"><![CDATA[<p>一个独特的独立游戏</p>
<!-- more -->
<p>你应该或多或少看过或者上手玩过一些解谜游戏，或是纯粹解谜为主，类似锈湖系列，room 系列，纪念碑谷等等。或是<a href="https://zh.wikipedia.org/wiki/%E7%B1%BB%E9%93%B6%E6%B2%B3%E6%88%98%E5%A3%AB%E6%81%B6%E9%AD%94%E5%9F%8E%E6%B8%B8%E6%88%8F">类银河战士恶魔城游戏</a> ，在偌大的地图中探索，不断升级获得新能力，再进行新的探索。有些解谜基于游戏本身，你在自己解谜完成后会有一种小快感，有些麻烦的尝试后可能会在网上搜索答案，然后感叹谜题之精妙。更有构思复杂的谜题，在一环一环的嵌套破译后，你会惊呼是神作。然后还有一类谜题超出了游戏本身，他可能打破第四面墙，达到作者与玩家的直接沟通，或者疯狂的将游戏内容拓展到现实。</p>
<p>最近玩了一款新像素风类银河战士恶魔城游戏，<a href="https://www.animalwell.net/">animal well</a>，直译过来就是动物井。作者 <a href="https://twitter.com/billy_basso"><strong>Billy Basso</strong></a> 经过七年的独立开发最终问世。游戏 steam，switch 和 ps 平台都有。游戏很小仅有不到 40M，据说还是作者自己开发的引擎，但内容真的惊为天人，游戏设计之精妙，谜题难度之离谱，我个人评价是满分 10 分的佳作。</p>
<p>游戏的地图十分大，而且是左右上下连通的，这算是亮点，但不算新意。我之前玩过的<a href="https://memo.laffitto.xyz/m/e9d415d447740760">好狗狗星系</a>才是真正把这种连通地图做成游戏特色。游戏初始操纵着软糖人（个人称呼）在地图中探索。在途中你会收集各种各样的东西，获得不一样的能力，借助能力你就能去一些你之前无法探索的地形。听起来很俗套，但是真正游玩的时候，不同能力的搭配会达成一些操作，你会惊呼，同一个谜题原来可以这样解，又可以那样解，而这要求的操作难度是大大不同的，颇有一种塞尔达神庙解谜的感觉。但是你以为自己发现了游戏中的bug，可以用某种方式去无限作弊时，你又会发现，其实作者早就设置好了障碍，这一切都在他的计算之中。</p>
<blockquote>
<p>庞大的地图和渺小的我<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202405272333044.jpg" alt="" loading="lazy"></p>
</blockquote>
<p>游戏中期可以获得一个道具笛子，通过不同的方向可以吹出不同的韵律，而特定的韵律就可以触发特殊的效果。这就导致游戏中蕴含着很多隐藏谜题。无论是收集64颗蛋后，破译出64音符的旋律解锁重要道具，又或者全图寻找16只兔子，之后再次根据兔子耳朵结合四进制信息破译方向信息，抵达最终之地。你都会惊呼，这难度和隐藏度已经到了非人的境界。</p>
<p>更为疯狂的是，游戏中一些独特操作会产生一些特殊编码，然而他们都是有意义的，收集全部内容完成拼接，会得到一个地图，而地图的最终之地，居然是作者和玩家的对话录音，这切切实实打破了第四面墙。这终极的谜题，在全网玩家探索努力下居然三天就破译出来了，不得不感叹网络和群众的力量。尽管如此，游戏还有许多细小的彩蛋等待探索。你永远不知道作者藏了多少东西。<br>
有兴趣的可以看看 b 站上的相关解谜视频，剩下的只剩感叹：<br>
<a href="https://www.bilibili.com/video/BV1Dx4y1i7C1">动物井 寻找农场巨兔以及解谜原理 ANIMAL WELL 预定年度最佳探索类银河恶魔城</a><br>
<a href="https://www.bilibili.com/video/BV1Lz421Y7y1">动物井真结局 最疯狂的谜题以及解谜原理 开发者录音 ANIMAL WELL 预定年度最佳探索类银河恶魔城</a></p>
<p>我在switch平台购买游玩的游戏，现在大概12小时游戏时间，仅仅全收集了蛋，兔子谜题和第四面墙实在是过于复杂了，不是我能独立解决的，后面的内容看视频云完了。实际我是 2D 跳跃类型游戏的手残党，玩这个游戏有些地方还是受了点苦头的，特别是你在漫长跳跃尝试后因为一个失误失败重来，真的非常烦躁。不过好歹还不算太难，达成之后有一种非常强的满足感。玩游戏的时候打开地图，你会好奇地探索着任何一个黑色的区域，因为基本上所有的区域都有隐藏的东西，他们就如同一个个小手勾引着你将他们全部挖掘。作为一个独立游戏，在保证趣味性和探索性的同时，能够不断让你发出惊呼，这种惊喜让生活充满了乐趣。你也能够感受到开发者的硬核和设计良苦用心。这时一个好游戏，值得大家都去感受一下，不过 steam 上售价 85 米，不着急还是可以等等打折再入手吧。</p>
<blockquote>
<p>追逐战的猫猫截图，说实话有点吓人<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202405272334242.jpg" alt="" loading="lazy"></p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[旅程——香港]]></title>
        <id>https://blog.laffitto.xyz/post/lu-cheng-xiang-gang/</id>
        <link href="https://blog.laffitto.xyz/post/lu-cheng-xiang-gang/">
        </link>
        <updated>2024-05-14T15:08:53.000Z</updated>
        <summary type="html"><![CDATA[<p>五一香港游记</p>
]]></summary>
        <content type="html"><![CDATA[<p>五一香港游记</p>
<!-- more -->
<p>作为一个生活在中国的普通人，能有一个长假期不容易。趁着五一假期，和女朋友和另一位好朋友一起开启一段香港之旅。</p>
<h2 id="day1-过关-然后落寞离场">DAY1 过关 然后落寞离场</h2>
<p>去香港的第一步是过关。从合肥出发，乘坐 6 点 40 的飞机，于 8 点半左右到达深圳。我们的路线是前往福田口岸过关。可能是由于深圳香港天气不好的原因，口岸没有想象中五一那种流量，轻轻松松基本没有排队便到达了香港境内——落马洲站。</p>
<p>入境后香港这边也是有雨，先乘坐地铁到酒店。香港的地铁也算方便，在 iphone 上开通了八达通后，体验基本和国内一致。在一路换乘颠簸之后，我们终于到达位于荃湾附近的酒店。淅淅沥沥的小雨打湿了行李箱，不过也打走了假期拥挤的氛围。</p>
<p>我们这一行的目的是来看五月天五月一日的香港演唱会，可以说是为了这盘醋包了这顿饺子。在我去附近的取票机取了票后，已然下午1点左右。当下还是得吃点东西来填饱肚子，在休整一番后，我们乘坐酒店巴士到附近的新都会广场。这里我们吃了一家越南菜芽庄。整体来说是我了解的那种臭臭又香香的感觉，肉很香，酱很上头。</p>
<p>吃饱喝足后，我们向着演唱会的地点中环附近前行。在快到达场馆附近时，突然收到了因为器材和天气原因演唱会推迟到9号到噩耗。当时瞬间感觉如此的不真实但又不得不接受这样的结果。看着中环附近的巨大的摩天轮和同样得到消息失落的歌迷们，有一种身处巨大洪流下的无力感。天气倒是讽刺，雨逐渐消失甚至开始放晴，至少不用打伞了。</p>
<p>演唱会取消归取消，我们的行程还得继续。顺延着海滨长廊继续逛街拍照，海风与水面之间的游船航行在维多利亚港，有种轻松惬意的感觉。远远的可以看见museum+的巨大屏幕和天际100高挑身影。预报说8点有烟花大会，我们在时间差不多的时候选取到一个合适的位置，静静的等待烟花绽放。然而期望越大，失望也挺大，可能是离烟花地点较远的缘故。烟花在感官上非常的小，甚至没有旁边的楼高，反观烟倒是挺大，稀稀拉拉的放了10min就结束了。个人感觉实在是太拉了，无论是本地人还是游客，看到肯定都会失望，宣传的有点用力了。</p>
<p>回程的时候想着吃点东西，到达葵涌附近的富华冰室。一开始我听冰室这个名字，还以为是吃甜品冰淇淋的地方，尝试才知道是类似于香港的那种大排档一样的形式。你可以点各种盖饭面条，外加小零食饮料，算是有香港特色。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202405142248846.jpg" alt="20240514_122519.jpg" loading="lazy"></p>
<h2 id="day2-city-walk-累但挺开心">DAY2 City Walk 累但挺开心</h2>
<p>第二天的主要任务就是逛街。从旺角出发，沿着弥敦道一路向南进发，途径油麻地-佐敦-尖沙咀。路上形形色色的车，形形色色的楼。五彩斑斓的双层巴士，红色鲜艳的小的士。走在香港的街头，路边有繁华的高楼大厦，但同时也有低矮小巷。整体感觉路边乱乱的，但是乱中又透露着秩序，有种矛盾的美感。像是走在一种极度现代与古老的结合体中。<br>
中餐我们找了一家旺角的金华冰厅，在平常的主食基础上，点了菠萝包和西多士。西多士就是炸面包上面加上黄油，不过这一家的西多士有点过于油了，很香但不能够多吃。而且同是港式奶茶，仅仅是冰与热也有很大的区别。<br>
区别于内地的商场，香港地段寸土寸金，有些商场甚至有十几楼高，不过占地面积倒不是很大。从下午走到晚上，一路走到尖沙咀附近，伴随着淅淅沥沥的小雨，再次沿着海滨漫步，星光大道附近有手印长廊，里面有很多明星大导演的手印嵌在其中，还有麦兜可爱的小猪蹄。晚上去一家叫池记的馆子吃的云吞面和艇仔粥，感觉比较正宗，因为云吞面的那个汤够难吃。它艇仔粥的英文够有意思，Congee with pork squid and fish，直观的展示了所有的配料。喝粥是很舒服的，可以消除一定疲惫。这一天走的实在是太累了，从小腿痛到脚后跟。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202405142248382.jpg" alt="20240514_122759.jpg" loading="lazy"></p>
<h2 id="day3-香港海洋公园-进发">DAY3 香港海洋公园 进发</h2>
<p>第三天的行程是香港海洋公园。早晨先到一家小店吃了港式早茶，味道和种类与内地比较相似。点一壶茶，接着就是许许多多的小点心。旁边有很多的老年人，他们看着报纸聊着天，瞬间感觉时间被拉慢了。香港的报纸挺又去，收了一份收藏。</p>
<p>虽然香港也有迪士尼，但是忌惮人流量，还是选取了人数相对较少的海洋公园。票价在美团团购大概 310 元/人。海洋公园像是各地海洋世界与游乐场的结合体。整个公园横跨两座山，坐着小列车上山，然后缆车下山，四周环海，风景一览无余。尽管已经见识过一些海洋世界，但是漆黑一片中突现的海洋场景，巨大的章鱼，凌乱的鱼群，游走的海洋生物，加上场馆偏下坡的地形，我甚至感受到一阵阵迷幻眩晕，切实有种身处海洋世界的感觉。相较于国内的设施，海洋公园感觉有点地方有些岁月的痕迹，褪色和掉漆。我们看了海豚表演，是粤语和汉语双语进行的，表演的过程中穿插了一些保护自然环境和食用本地食品的宣传，要说节目精彩吧，和看过内地的海洋表演比是触不可及，更多感觉他们注重宣传而非表演。公园里面还有一些其他动物栖息，大熊猫，树懒等等。</p>
<p>从海洋公园出来后，我们到达了位于铜锣湾附近的沙嗲王吃晚餐。点了招牌的白咖喱香茅猪扒饭，蟹粉豆腐锅饭和和沙嗲乌冬面，外加一些小食饮料。不得不说白咖喱香茅猪扒和沙嗲还是非常香的，沙嗲有点像潮汕地区的沙茶酱，嘎嘎下饭。饭后又在附近的大商场逛了逛，之后到了尖沙咀的dondondonki 买了日本零食。回程后依旧又是巨累的一天。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202405142248494.jpg" alt="20240514_123118.jpg" loading="lazy"></p>
<h2 id="day4-尖沙咀美食探索-然后回程">DAY4 尖沙咀美食探索 然后回程</h2>
<p>时间过的飞快，转眼就到了回程的日子。预计下午两点左右从酒店出发去关口，于是进行最后一次美食探索，这里选择了尖沙咀附近的深仔记茶餐厅。虽然叫做茶餐厅，但是和内地形式完全不一样。我们点了叉烧虾仁滑蛋饭，芝士猪扒面，焗咖喱猪扒意面，加上特色的菠萝包和西多士，同样是香到不行。这一家明显比之前吃的冰室更加正宗。之后又去 hashtag 买了蛋挞，不得不说这蛋挞是真的大一口下去满满当当，偏甜。</p>
<p>下午回程的时候下了大雨，我们决定坐出租车从酒店返回落马洲过关口岸。豆大的雨点击打在玻璃上，不得不说老天爷还算给我们面子，虽然国庆假期南方都是雨，但起码我们逛街的时候基本晴朗。不过香港打车是真的贵，大概 27 公里的路程，加上过隧道费，行李费，大概需要将近 300 港币。过关回深圳很顺利，基本没有排队，安检也很顺利。至于回程航班，由于深圳天气有点小插曲，不过好歹还是回来了，也就不再计较了。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202405142249391.jpg" alt="20240514_123329.jpg" loading="lazy"></p>
<h2 id="香港的一点感想">香港的一点感想</h2>
<h3 id="电子化支付">电子化支付</h3>
<p>香港的支付即便是内地过去也不会感觉丝毫不方便，得益于支付宝和微信的普及，你基本可以在任何稍微大一点的地方使用他它们进行支付。再退其次，可以使用 apple 或 google pay 直接开通八达通，作为本地电子化支付的最好选择，无论是地铁公交，还有一些商店，做到了一卡在手，衣食无忧。当然我们还是备了 1000 港币现金的，吃早茶的小馆子没有任何电子支付的手段，手上有点实钱还是安心。<br>
<img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202405142249753.jpg" alt="20240514_123642.jpg" loading="lazy"></p>
<h3 id="交通趣闻">交通趣闻</h3>
<p>香港的交通给人感觉一种不太方便，但混乱中又彰显秩序。这是国内交通太方便而造成的心理落差。走在繁华的旺角尖沙咀街头，即便是在小巷没车的情况下，大多数人也不会横穿马路而是从街头巷尾经过。红绿灯不是简单的这边绿那边就红，导致虽然看起来拥挤，但交通也算比较顺畅。居住的附近有个加油站，旁边甚至有单独隔出来供行人走的羊肠小道。香港由于沿用英国式交通规则，过马路先向左看的经验会不适用，不过每条马路口都写了大大的「向左」「向右」的文字进行提示，倒也显得别有风趣。</p>
<figure data-type="image" tabindex="1"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202405142306529.jpg" alt="20240514_230502.jpg" loading="lazy"></figure>
<p>与之对比，我感觉内地确实很方便。这包含支付，交通，服务等等的舒适程度。但我感觉这种方便是可能建立在一定劳动廉价内卷上的来的，它们背后都是无数人的汗水和辛酸。香港遇见的大部分本地人都挺热情，各个职位上的人，他们的生活好像也不只是被工作所压迫。而且那些开车的，在便利店打工的人年纪有的也都挺高。他们是享受生活？或者为了生活而努力？不会有更年轻的人来替代他们吗？又或者香港新一代的年轻人根本看不上这些时薪与职业。时代在不断变化，我也无法用自己狭隘的目光去妄加推测。可能是由于国内发展过于迅猛，日新月异的变化在我角度看来习以为常。是先进，或者是趋势，还是说怀旧。香港汇丰银行有些网点甚至连个座位都没有，大爷大妈办理业务都是站着排队。人性化吗，肯定不人性。可能是历史遗留，可能是利益度量。无法深究其后的理由，但我充满好奇，以后也还是得多出去走走，多看看别人才能看清自己究竟是什么。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[折叠屏Fold5双屏不同桌面方案]]></title>
        <id>https://blog.laffitto.xyz/post/fold-with-different-launchers/</id>
        <link href="https://blog.laffitto.xyz/post/fold-with-different-launchers/">
        </link>
        <updated>2024-03-18T13:34:52.000Z</updated>
        <summary type="html"><![CDATA[<p>折叠屏内外屏使用不同桌面的探索</p>
]]></summary>
        <content type="html"><![CDATA[<p>折叠屏内外屏使用不同桌面的探索</p>
<!-- more -->
<p>我使用三星设备偏多，从S9系列入坑，S9+，S10 5G，Tab S7+，到S22U，耳机手表还用过buds+，buds pro，watch active2和watch classic4，最近还给女票淘了个美丽小废物flip3做热点备用机。实际自折叠屏发售以来我就觊觎已久，特别是fold系列的大折叠，但奈何感觉技术不成熟，加上价格也偏贵，一直没有入手。Fold5作为三星最新屏幕终于能够完整合上的新一代折叠，戳中了我的心窝。由于自己有root的需求，fold系列唯有欧版可以轻易的解锁且能使用相机，在海鲜市场蹲候多时终于入手。天蓝色12+256，屏幕完美，边框有一点点掉漆，不过6300，还要什么自行车，带个凯夫拉壳美滋滋。</p>
<p>三星折叠最与其他品牌折叠不同的点就在于它独特的屏幕比例，折叠情况下23:9的比例，导致它握起来更像是一个遥控器。自带默认的OneUI主屏幕固然可以，在展开内屏的情况下，合理显示布局，加上自带的下面一条任务栏，使用起来非常舒适。但是合起使用外屏时，拥挤的状态不够优雅。<a href="https://play.google.com/store/apps/details?id=bitpit.launcher&amp;hl=en_US&amp;pli=1">Niagara Launcher</a>作为一个第三方启动器，其简洁的滑动字母布局和通知直接呈现提醒非常适合三星狭长的外屏。于是需求产生了，是否可以在外屏使用Niagara主屏幕，而打开内屏后自动切换为有任务栏的OneUI主屏幕呢？</p>
<figure data-type="image" tabindex="1"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202403190009529.jpg" alt="" loading="lazy"></figure>
<h2 id="思路拆解">思路拆解</h2>
<p>答案显然是可以的，Android是可以选取拿个应用作为默认启动器的。在查阅和综合了相关资料后，结合实际使用情况，这个问题的解决方案可以进一步细化为以下三个部分：</p>
<ol>
<li>当屏幕合上，为外屏时，切换Niagara为默认主屏幕</li>
<li>当屏幕打开，为内屏时，切换OneUI为默认主屏幕</li>
<li>在外屏正在使用一些app时，如果此时打开为大屏幕内屏，则需要保持这些app为打开状态。即外屏转到内屏时，有些app可以无缝切换（不会返回主屏）</li>
</ol>
<p>理论上，只要手机厂商允许修改默认启动器，那么在其他牌子折叠屏上也同样可以实现。</p>
<h2 id="无root解决方案">无ROOT解决方案</h2>
<p>大多情况下，手机是没有root的，这里需要借助<a href="https://play.google.com/store/apps/details?id=net.dinglisch.android.taskerm&amp;hl=en_US">Tasker</a>和它的一个插件 <a href="https://play.google.com/store/apps/details?id=com.joaomgcd.autotools&amp;hl=en_US">AutoTools</a>。Tasker是一个自动化工具，有点类似苹果的快捷指令和三星的日常程序，不过它能够做到的东西更加广泛一些。软件可以试用，tasker建议直接入手，autotools看广告免费用。</p>
<p>tasker使用adb命令去激活read logs的功能，连接adb后，输入以下命令：</p>
<pre><code class="language-shell">adb shell pm grant net.dinglisch.android.taskerm android.permission.READ_LOGS
adb shell am force-stop net.dinglisch.android.taskerm
</code></pre>
<p>之后就需要使用tasker创建对应任务和触发条件，这里引用两个其他帖子的方法（本质一样），自行配置，不重复造轮子了。</p>
<p><a href="https://xdaforums.com/t/tasker-auto-switch-launcher-for-folded-unfolded-screen.4603923/">[Tasker] Auto-switch Launcher for folded/unfolded screen</a></p>
<p><a href="https://droidwin.com/how-to-set-different-launcher-for-folded-unfolded-screen/">How to Set Different Launcher for Folded/Unfolded Screen</a></p>
<p>如果觉得配置起来有点迷糊，这里也有reddit网友给出的tasker一键导入，一共三配置，分别对应思路拆解的三个部分：</p>
<p><a href="https://www.reddit.com/r/GalaxyFold/comments/174sz3d/comment/k4qoxuq/?utm_source=share&amp;utm_medium=web2x&amp;context=3">Reddit回答 Dual Launcher Fold 5</a></p>
<p>这里分别解释一下三个配置文件</p>
<h3 id="折叠情况">折叠情况</h3>
<p>在自定义设置情况下，执行Folded这个任务。自定义设置为判断条件，edge_panel_width值为401即折叠情况下。Folded任务有以下步骤：</p>
<ol>
<li>使用AutoTools将主屏幕设置为Niagara。</li>
<li>返回桌面主页。</li>
<li>设置一个变量，名称为FoldStatus，设置此时状态为CLOSED（关闭）。实际上这步可以不需要。后续可以根据这个自定义更多复杂的操作。</li>
</ol>
<figure data-type="image" tabindex="2"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202403190010100.jpg" alt="" loading="lazy"></figure>
<h3 id="判断需要保持打开的app">判断需要保持打开的APP</h3>
<p>在特定app打开的情况下，执行Hold Refresh这个任务；在app关闭后，执行Pause Refresh这个任务。特定app可以根据自己需要选中即可。</p>
<p>其中，Hold Refresh任务定义了一个变量，名称为PauseRefresh，并设定为1。Pause Refresh任务将PauseRefresh这个变量值进行清楚。</p>
<p>因此这个配置文件的逻辑为：在特定选中的app打开时，变量PauseRefresh被设置为1，在app关闭退出时，变量PauseRefresh变为未设置状态。这个主要是为了配合下面一个配置文件做判断。</p>
<figure data-type="image" tabindex="3"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202403190010414.jpg" alt="" loading="lazy"></figure>
<h3 id="展开情况">展开情况</h3>
<p>在自定义设置情况下，执行Unfolded这个任务。自定义设置为判断条件，edge_panel_width值为362即展开情况下。UnFolded任务有以下步骤：</p>
<ol>
<li>使用AutoTools将主屏幕设置为OneUI主屏幕。</li>
<li>判断变量PauseRefresh是否设置，如果设置，表示选中app在前台，不做操作。如果未设置，则返回桌面，启动主屏幕。</li>
<li>将变量FoldStatus，设置此时状态为OPENED（打开）。实际上这步可以不需要。</li>
</ol>
<figure data-type="image" tabindex="4"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202403190010030.jpg" alt="" loading="lazy"></figure>
<p>在导入完三个配置文件后，<strong>一定要将默认启动器设置为AutoTools</strong>，不然无效。</p>
<h3 id="小瑕疵">小瑕疵</h3>
<p>因为本质上还是借助AutoTools作为一个中间应用，去启动两个不同的桌面，AutoTools才是默认的桌面，因此有点小瑕疵：比如桌面长按应用无法使用shortcuts；手机重启后展开大屏无法显示状态栏，需要手动把默认桌面先切换回OneUI主屏幕，保证状态栏显示，再修改为AutoTools。不过这些瑕疵无伤大雅，因为99%的时间你不会去调整桌面，也不会经常去重启手机。所以体验还算舒服。</p>
<h2 id="root解决方案">ROOT解决方案</h2>
<p>不过既然我都已经root，当然要展现root的优势。主要改进就一点，使用tasker直接调用shell命令，在root的环境下切换默认桌面。这样就可以和AutoTools说拜拜了。</p>
<p>至于切换的命令，探索后发现是这个：</p>
<pre><code class="language-shell">adb shell cmd package set-home-activity com.example.launcher/com.example.launcher.MainActivity
</code></pre>
<p>com.example.launcher为启动器的包名，</p>
<p>在tasker中选择将选择Autotools的命令改为运行shell命令，输入语句，例如展开时OneUI启动器：</p>
<pre><code class="language-shell">cmd package set-home-activity com.sec.android.app.launcher/com.sec.android.app.launcher.MainActivity
</code></pre>
<figure data-type="image" tabindex="5"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202403190011303.jpg" alt="" loading="lazy"></figure>
<p>折叠时Niagara 启动器</p>
<pre><code class="language-shell">cmd package set-home-activity bitpit.launcher/bitpit.launcher.MainActivity
</code></pre>
<figure data-type="image" tabindex="6"><img src="https://picgo-1306089623.cos.ap-nanjing.myqcloud.com/202403190011070.jpg" alt="" loading="lazy"></figure>
<p>其他更改不变，这样就可以直接切换到默认的启动器，而且小瑕疵问题也解决了。</p>
<p>我图中还借助<a href="https://play.google.com/store/apps/details?id=com.pranavpandey.rotation&amp;hl=en_US">rotation</a>这个应用，实现折叠小屏强制竖屏，展开大屏强制旋转。另外我发现，用大屏情况下，转到后置摄像头自拍，且用小屏控制时会回到桌面，所以我还设置了一个变量Camera Set，检测如何变为小屏时相机打开了，那么还是再开启相机，实现一个无缝后置摄像头自拍的情况。这种设置很灵活，配合自己的需求修改就好。</p>
<h2 id="fold5简单使用体验">Fold5简单使用体验</h2>
<p>Fold5到手已经用了快10天了，我用起来还算满意。可能是这种屏幕比例，我更倾向于展开使用屏幕，真的就像在用一个小平板一样，阅读文字和漫画的体验非常舒服。自己也不是追求那么极致的拍照体验，所以从S22U换下来感觉也还好。而且折叠屏最重要的一点，我拍照的时候可以打开后置预览，这样拍人物的时候对方可以在外屏看到呈现效果，调整姿势表情。这简直感动哭了好吧，拍女朋友时候难度直接降低一个等级，增进情侣和睦的好机器呀。</p>
<p>而且8gen2真的出色，尽管Fold5只有4400毫安的电池，当感觉比我8gen1的S22U续航还要好，外出续航焦虑至少是没有了。虽然25w充电，但三星45和25w在充满时间上没太大区别，也感知不强了。</p>
<p>目前时这些，后续如果再有啥体验再补充吧。</p>
<p>自己由于是root玩家，淘一个可以轻易root且不锁相机的欧版也算是花了大功夫。最后我只建议三星你不要不识好歹，把你那针对除了欧版其他版本解锁后相机不能用的规矩给我取消了，让人能好好的玩玩机喽！</p>
]]></content>
    </entry>
</feed>